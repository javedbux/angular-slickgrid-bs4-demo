(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{0:function(t,e,i){t.exports=i("zUnb")},"4JaT":function(t,e){t.exports='<div class="container">\r\n    <h2>{{title}}</h2>\r\n    <div class="subtitle" [innerHTML]="subTitle"></div>\r\n</div>\r\n'},"4XDI":function(t,e){t.exports='\r\n<div id="demo-container" class="container">\r\n  <h2>{{title}}</h2>\r\n  <div class="subtitle" [innerHTML]="subTitle"></div>\r\n\r\n  <div class="col-sm-6">\r\n      <label>autoEdit setting</label>\r\n      <span id="radioAutoEdit">\r\n          <label class="radio-inline control-label" for="radioTrue">\r\n              <input type="radio" name="inlineRadioOptions" id="radioTrue" checked [value]="isAutoEdit" (change)="setAutoEdit(true)"> ON (single-click)\r\n          </label>\r\n          <label class="radio-inline control-label" for="radioFalse">\r\n              <input type="radio" name="inlineRadioOptions" id="radioFalse" [value]="isAutoEdit" (change)="setAutoEdit(false)"> OFF (double-click)\r\n          </label>\r\n      </span>\r\n      <div class="row col-sm-12">\r\n        <span>\r\n            <button class="btn btn-outline-secondary btn-sm" (click)="undo()">\r\n                <i class="fa fa-undo"></i>\r\n                Undo last edit(s)\r\n            </button>\r\n            <label class="checkbox-inline control-label" for="autoCommitEdit">\r\n                <input type="checkbox" id="autoCommitEdit" [value]="gridOptions.autoCommitEdit" (click)="changeAutoCommit()">\r\n                Auto Commit Edit\r\n              </label>\r\n        </span>\r\n      </div>\r\n      <div class="row" style="margin-top: 5px">\r\n          <button class="btn btn-outline-secondary btn-sm" (click)="angularGrid.filterService.clearFilters()">Clear Filters</button>\r\n          <button class="btn btn-outline-secondary btn-sm" (click)="angularGrid.sortService.clearSorting()">Clear Sorting</button>\r\n          <button class="btn btn-sm btn-outline-info" (click)="addItem()" title="Clear Filters &amp; Sorting to see it better">Add item</button>\r\n          <button class="btn btn-sm btn-outline-danger" (click)="deleteItem()">Delete item</button>\r\n      </div>\r\n  </div>\r\n\r\n  <div class="col-sm-6">\r\n      <div class="alert alert-info" *ngIf="updatedObject">\r\n          <strong>Updated Item:</strong> {{updatedObject | json}}\r\n      </div>\r\n      <div class="alert alert-warning" *ngIf="alertWarning">\r\n          <strong>Updated Item:</strong> {{alertWarning}}\r\n      </div>\r\n  </div>\r\n\r\n  <div class="col-sm-12">\r\n      <angular-slickgrid gridId="grid2"\r\n          (onAngularGridCreated)="angularGridReady($event)"\r\n          (sgOnCellChange)="onCellChanged($event.detail.eventData, $event.detail.args)"\r\n          (sgOnClick)="onCellClicked($event.detail.eventData, $event.detail.args)"\r\n          (sgOnValidationError)="onCellValidation($event.detail.eventData, $event.detail.args)"\r\n          [columnDefinitions]="columnDefinitions" [gridOptions]="gridOptions" [dataset]="dataset">\r\n      </angular-slickgrid>\r\n  </div>\r\n</div>\r\n'},"7xm8":function(t,e){t.exports='\n<div id="demo-container" class="container-fluid">\n    <h2>{{title}}</h2>\n    <div class="subtitle" [innerHTML]="subTitle"></div>\n\n    <div class="col-md-6" style="margin-bottom: 15px">\n            <label>Octopart Catalog Search <small>(type a word then press ENTER)</small></label>\n            <input type="text" class="form-control" [value]="search" (change)="searchChanged($event.target.value)">\n    </div>\n\n    <div class="alert alert-warning col-md-6"\n        role="alert"\n        *ngIf="loading">\n        <i class="fa fa-refresh fa-spin fa-lg fa-fw"></i>\n        <span>Loading...</span>\n    </div>\n\n    <angular-slickgrid\n        gridId="grid18"\n        [columnDefinitions]="columnDefinitions"\n        [gridOptions]="gridOptions"\n        [dataset]="dataset"\n        [customDataView]="customDataView"\n        (onAngularGridCreated)="angularGridReady($event)"\n        (sgOnViewportChanged)="onViewportChanged($event.detail.eventData, $event.detail.args)"\n        (sgOnSort)="onSort($event.detail.eventData, $event.detail.args)">\n    </angular-slickgrid>\n  </div>\n'},ABze:function(t,e){t.exports='\r\n<div id="demo-container" class="container-fluid">\r\n    <h2>{{title}}</h2>\r\n    <div class="subtitle" [innerHTML]="subTitle"></div>\r\n\r\n    <button class="btn btn-outline-secondary btn-sm" (click)="clearGridStateFromLocalStorage()">\r\n        <i class="fa fa-times"></i>\r\n        Clear Grid State from Local Storage &amp; Reset Grid\r\n    </button>\r\n\r\n    <angular-slickgrid gridId="grid16"\r\n              [columnDefinitions]="columnDefinitions"\r\n              [gridOptions]="gridOptions"\r\n              [dataset]="dataset"\r\n              (onAngularGridCreated)="angularGridReady($event)"\r\n              (onGridStateChanged)="gridStateChanged($event)"\r\n              (onBeforeGridDestroy)="saveCurrentGridState($event)">\r\n    </angular-slickgrid>\r\n  </div>\r\n'},B3Kb:function(t,e){t.exports='\n<div id="demo-container" class="container-fluid">\n    <h2>{{title}}</h2>\n    <div class="subtitle" [innerHTML]="subTitle"></div>\n\n    <angular-slickgrid gridId="grid17"\n        (onAngularGridCreated)="angularGridReady($event)"\n        [columnDefinitions]="columnDefinitions"\n        [gridOptions]="gridOptions"\n        [dataset]="dataset">\n    </angular-slickgrid>\n</div>\n'},BQc2:function(t,e){t.exports='\r\n<div id="demo-container" class="container-fluid">\r\n    <h2>{{title}}</h2>\r\n    <div class="subtitle" [innerHTML]="subTitle"></div>\r\n\r\n    <h3>Grid 1</h3>\r\n    <angular-slickgrid gridId="grid1"\r\n                [columnDefinitions]="columnDefinitions1"\r\n                [gridOptions]="gridOptions1"\r\n                [dataset]="dataset1"\r\n                gridHeight="300"\r\n                gridWidth="800">\r\n    </angular-slickgrid>\r\n\r\n    <hr/>\r\n\r\n    <h3>Grid 2</h3>\r\n    <angular-slickgrid gridId="grid2"\r\n                [columnDefinitions]="columnDefinitions2"\r\n                [gridOptions]="gridOptions2"\r\n                [dataset]="dataset2"\r\n                gridHeight="300"\r\n                gridWidth="800">\r\n    </angular-slickgrid>\r\n</div>\r\n\r\n'},CZsa:function(t,e){t.exports='\r\n<div class="container" style="margin-top: 10px">\r\n\t<div class="col-sm-8">\r\n\t\t<div class="alert alert-info">\r\n\t\t\t<strong>Custom Pagination URL:</strong>\r\n\t\t\t<div [innerHTML]="currentUrl"></div>\r\n\t\t</div>\r\n\t</div>\r\n\t<swt-common-grid-pagination #commonGridPag1></swt-common-grid-pagination>\r\n\t<swt-common-grid #commonGrid1\r\n\t\t\t(onFilterChanged)="filterChanged($event)"\r\n\t\t\t(onPaginationChanged)="paginationChanged($event)"\r\n\t\t\t(onSortChanged)="sortChanged($event)"></swt-common-grid>\r\n</div>\r\n'},DyK0:function(t,e){t.exports='\r\n<div id="demo-container" class="container-fluid">\r\n    <h2>{{title}}</h2>\r\n    <div class="subtitle" [innerHTML]="subTitle"></div>\r\n\r\n    <div class="col-sm-12">\r\n        <span>\r\n            <button class="btn btn-sm btn-outline-secondary" (click)="addNewItem()">Add New Mocked Item</button>\r\n            <button class="btn btn-sm btn-outline-secondary" (click)="updateSecondItem()">Update 2nd Row Item with Random Duration</button>\r\n            <button class="btn btn-sm btn-outline-secondary" (click)="highlighFifthRow()">Highlight 5th Row</button>\r\n            <button class="btn btn-sm btn-outline-secondary" (click)="changeDurationBackgroundColor()">Highlight Rows with Duration over 50</button>\r\n        </span>\r\n        <hr/>\r\n    </div>\r\n\r\n    <div class="col-sm-12">\r\n        <angular-slickgrid gridId="grid2" [columnDefinitions]="columnDefinitions" [gridOptions]="gridOptions" [dataset]="dataset"\r\n        (onAngularGridCreated)="angularGridReady($event)">\r\n        </angular-slickgrid>\r\n    </div>\r\n</div>\r\n'},HOIw:function(t,e){t.exports='\r\n<div id="demo-container" class="container-fluid">\r\n    <h2>{{title}}</h2>\r\n    <div class="subtitle" [innerHTML]="subTitle"></div>\r\n\r\n    <hr/>\r\n\r\n    <div class="row col-sm-12">\r\n        <button class="btn btn-outline-secondary btn-sm" (click)="switchLanguage()">\r\n            <i class="fa fa-language"></i>\r\n            Switch Language\r\n        </button>\r\n        <b>Locale:</b> <span style="font-style: italic">{{selectedLanguage + \'.json\'}}</span>\r\n\r\n        <span style="margin-left: 20px">\r\n            <button class="btn btn-outline-secondary btn-sm" (click)="exportToFile(\'csv\')">\r\n                <i class="fa fa-download"></i>\r\n                Download to CSV\r\n            </button>\r\n            <button class="btn btn-outline-secondary btn-sm" (click)="exportToFile(\'txt\')">\r\n                <i class="fa fa-download"></i>\r\n                Download to Text\r\n            </button>\r\n            <button class="btn btn-outline-secondary btn-sm" (click)="dynamicallyAddTitleHeader()">\r\n                <i class="fa fa-plus"></i>\r\n                Dynamically Duplicate Title Column\r\n            </button>\r\n        </span>\r\n    </div>\r\n\r\n    <div class="col-sm-12">\r\n        <angular-slickgrid gridId="grid12"\r\n            (onAngularGridCreated)="angularGridReady($event)"\r\n            [columnDefinitions]="columnDefinitions"\r\n            [gridOptions]="gridOptions"\r\n            [dataset]="dataset">\r\n        </angular-slickgrid>\r\n    </div>\r\n</div>\r\n'},K9ae:function(t,e){t.exports='\r\n<div id="demo-container" class="container-fluid">\r\n  <h2>{{title}}</h2>\r\n  <div class="subtitle" [innerHTML]="subTitle"></div>\r\n\r\n  <br/>\r\n  <span *ngIf="statistics" style="margin-right: 10px">\r\n      <b>Statistics:</b> {{statistics.startTime | date: \'yyyy-MM-dd HH:mm aaaaa\\\'m\\\'\'}} | {{statistics.itemCount}} of {{statistics.totalItemCount}} items\r\n  </span>\r\n  <button class="btn btn-outline-secondary btn-sm" (click)="angularGrid.filterService.clearFilters()">Clear Filters</button>\r\n  <button class="btn btn-outline-secondary btn-sm" (click)="angularGrid.sortService.clearSorting()">Clear Sorting</button>\r\n\r\n  <angular-slickgrid gridId="grid2"\r\n            [columnDefinitions]="columnDefinitions"\r\n            [gridOptions]="gridOptions"\r\n            [dataset]="dataset"\r\n            (onAngularGridCreated)="angularGridReady($event)"\r\n            (onGridStateChanged)="gridStateChanged($event)"\r\n            (onBeforeGridDestroy)="saveCurrentGridState($event)"\r\n            (sgOnRowCountChanged)="refreshStatistics($event.detail.eventData, $event.detail.args)">\r\n  </angular-slickgrid>\r\n</div>\r\n'},L9S4:function(t,e){t.exports='\r\n<div id="demo-container" class="container-fluid">\r\n    <h2>{{title}}</h2>\r\n    <div class="subtitle" [innerHTML]="subTitle"></div>\r\n\r\n    <div class="col-sm-12">\r\n        <angular-slickgrid gridId="grid2"\r\n            (onAngularGridCreated)="angularGridReady($event)"\r\n            (onDataviewCreated)="dataviewReady($event)"\r\n            (onGridCreated)="gridReady($event)"\r\n            [columnDefinitions]="columnDefinitions"\r\n            [gridOptions]="gridOptions"\r\n            [dataset]="dataset">\r\n        </angular-slickgrid>\r\n    </div>\r\n</div>\r\n'},Lw2E:function(t,e,i){var n={"./locale":"wCDk","./locale.js":"wCDk"};function r(t){var e=a(t);return i(e)}function a(t){var e=n[t];if(!(e+1)){var i=new Error("Cannot find module '"+t+"'");throw i.code="MODULE_NOT_FOUND",i}return e}r.keys=function(){return Object.keys(n)},r.resolve=a,t.exports=r,r.id="Lw2E"},WqZd:function(t,e,i){var n={"./ar.js":"+OV3","./at.js":"Gt+8","./be.js":"oAMl","./bg.js":"9De2","./bn.js":"6Cpa","./cat.js":"/iph","./cs.js":"EBSL","./cy.js":"Ton7","./da.js":"++FP","./de.js":"Jt8t","./default.js":"QM5T","./eo.js":"V7ZE","./es.js":"SYT2","./et.js":"gRVh","./fa.js":"eHtV","./fi.js":"ewub","./fr.js":"Aid2","./gr.js":"W8vW","./he.js":"QhH9","./hi.js":"/v+a","./hr.js":"j+gB","./hu.js":"KV+S","./id.js":"AixY","./index.js":"y/pk","./it.js":"rmDh","./ja.js":"UMqg","./km.js":"5Q0x","./ko.js":"VEU4","./kz.js":"0kzd","./lt.js":"YLy/","./lv.js":"18gA","./mk.js":"31E+","./mn.js":"5p1B","./ms.js":"fvCo","./my.js":"SEQC","./nl.js":"3uVB","./no.js":"uHQq","./pa.js":"wGah","./pl.js":"tXmi","./pt.js":"Io36","./ro.js":"ZV7w","./ru.js":"b/zg","./si.js":"fV5r","./sk.js":"cntR","./sl.js":"ks2o","./sq.js":"JrQ3","./sr.js":"DiE8","./sv.js":"mNSI","./th.js":"hSGY","./tr.js":"+AxM","./uk.js":"+zM+","./vn.js":"yAt/","./zh.js":"3BxJ"};function r(t){var e=a(t);return i(e)}function a(t){var e=n[t];if(!(e+1)){var i=new Error("Cannot find module '"+t+"'");throw i.code="MODULE_NOT_FOUND",i}return e}r.keys=function(){return Object.keys(n)},r.resolve=a,t.exports=r,r.id="WqZd"},Y4ym:function(t,e){t.exports='\r\n<div id="demo-container" class="container-fluid">\r\n    <h2>{{title}}</h2>\r\n    <div class="subtitle" [innerHTML]="subTitle"></div>\r\n\r\n    <div class="col-sm-12">\r\n        <angular-slickgrid gridId="grid2"\r\n            (onAngularGridCreated)="angularGridReady($event)"\r\n            [columnDefinitions]="columnDefinitions"\r\n            [gridOptions]="gridOptions"\r\n            [dataset]="dataset">\r\n        </angular-slickgrid>\r\n    </div>\r\n</div>\r\n'},bRkm:function(t,e){t.exports='<div id="demo-container" class="container-fluid">\r\n    <h2>{{title}}</h2>\r\n    <div class="subtitle" [innerHTML]="subTitle"></div>\r\n    \r\n    <div class="row col-sm-12">\r\n        <button class="btn btn-outline-secondary btn-xs" (click)="loadData(500)">\r\n            500 rows\r\n        </button>\r\n        <button class="btn btn-outline-secondary btn-xs" (click)="loadData(50000)">\r\n            50k rows\r\n        </button>\r\n        <button class="btn btn-outline-secondary btn-xs" (click)="clearGrouping()">\r\n            Clear grouping\r\n        </button>\r\n        <button class="btn btn-outline-secondary btn-xs" (click)="collapseAllGroups()">\r\n            Collapse all groups\r\n        </button>\r\n        <button class="btn btn-outline-secondary btn-xs" (click)="expandAllGroups()">\r\n            Expand all groups\r\n        </button>\r\n    </div>\r\n    <hr/>\r\n    <div class="row col-sm-12">\r\n        <button class="btn btn-outline-secondary btn-xs" (click)="groupByDuration()">\r\n            Group by duration &amp; sort groups by value\r\n        </button>\r\n        <button class="btn btn-outline-secondary btn-xs" (click)="groupByDurationOrderByCount(false)">\r\n            Group by duration &amp; sort groups by count\r\n        </button>\r\n    </div>\r\n    <div class="row col-sm-12">\r\n        <button class="btn btn-outline-secondary btn-xs" (click)="groupByDurationOrderByCount(true)">\r\n            Group by duration &amp; sort groups by count, aggregate collapsed\r\n        </button>\r\n        <button class="btn btn-outline-secondary btn-xs" (click)="groupByDurationEffortDriven()">\r\n            Group by duration then effort-driven\r\n        </button>\r\n        <button class="btn btn-outline-secondary btn-xs" (click)="groupByDurationEffortDrivenPercent()">\r\n            Group by duration then effort-driven then percent.\r\n        </button>\r\n        <span [hidden]="!processing">\r\n            <i class="fa fa-refresh fa-spin fa-lg fa-fw"></i>\r\n        </span>\r\n    </div>\r\n\r\n    <angular-slickgrid gridId="grid2"\r\n        (onAngularGridCreated)="angularGridReady($event)"\r\n        (onDataviewCreated)="dataviewReady($event)"\r\n        (onGridCreated)="gridReady($event)"\r\n        [dataset]="dataset"\r\n        [columnDefinitions]="columnDefinitions"\r\n        [gridOptions]="gridOptions">\r\n    </angular-slickgrid>\r\n</div>\r\n'},crnd:function(t,e){function i(t){return Promise.resolve().then(function(){var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e})}i.keys=function(){return[]},i.resolve=i,t.exports=i,i.id="crnd"},dFQ2:function(t,e){t.exports='\r\n<div id="demo-container" class="container-fluid">\r\n  <h2>{{title}}</h2>\r\n  <div class="subtitle row" [innerHTML]="subTitle"></div>\r\n\r\n  <div class="row">\r\n    <div class="col-sm-4">\r\n      <div [class]="status.class" role="alert">\r\n        <strong>Status: </strong> {{status.text}}\r\n        <span [hidden]="!processing">\r\n          <i class="fa fa-refresh fa-spin fa-lg fa-fw"></i>\r\n        </span>\r\n        <br/>\r\n      </div>\r\n      <span *ngIf="statistics">\r\n          <b>Statistics:</b> {{statistics.endTime | date: \'yyyy-MM-dd HH:mm aaaaa\\\'m\\\'\'}} | {{statistics.executionTime}}ms | {{statistics.totalCount}} items\r\n      </span>\r\n    </div>\r\n    <div class="col-sm-8">\r\n      <div class="alert alert-info">\r\n        <strong>OData Query:</strong> {{odataQuery}}\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <angular-slickgrid gridId="grid4"\r\n            [columnDefinitions]="columnDefinitions"\r\n            [gridOptions]="gridOptions"\r\n            [dataset]="dataset">\r\n  </angular-slickgrid>\r\n</div>\r\n\r\n'},ehSh:function(t,e){t.exports='\r\n<div id="demo-container" class="container-fluid">\r\n    <h2>{{title}}</h2>\r\n    <div class="subtitle" [innerHTML]="subTitle"></div>\r\n\r\n    <angular-slickgrid gridId="grid2"\r\n              [columnDefinitions]="columnDefinitions"\r\n              [gridOptions]="gridOptions"\r\n              [dataset]="dataset">\r\n    </angular-slickgrid>\r\n  </div>\r\n'},hpZS:function(t,e){t.exports='\r\n<div id="demo-container" class="container-fluid">\r\n    <h2>{{title}}</h2>\r\n    <div class="subtitle" [innerHTML]="subTitle"></div>\r\n\r\n    <div class="row">\r\n        <div class="col-sm-8">\r\n          <div class="alert alert-success">\r\n            <strong>(single select) Selected Row:</strong>\r\n            <span [innerHTML]="selectedTitle"></span>\r\n          </div>\r\n        </div>\r\n    </div>\r\n\r\n    <angular-slickgrid gridId="grid1"\r\n        gridHeight="200"\r\n        gridWidth="800"\r\n        [columnDefinitions]="columnDefinitions1"\r\n        [gridOptions]="gridOptions1"\r\n        [dataset]="dataset1"\r\n        (onAngularGridCreated)="angularGridReady1($event)"\r\n        (sgOnSelectedRowsChanged)="handleSelectedRowsChanged1($event.detail.eventData, $event.detail.args)">\r\n    </angular-slickgrid>\r\n\r\n    <hr>\r\n\r\n    <div class="row">\r\n        <div class="col-sm-8">\r\n          <div class="alert alert-success">\r\n            <strong>(multi-select) Selected Row(s):</strong>\r\n            <span [innerHTML]="selectedTitles"></span>\r\n          </div>\r\n        </div>\r\n    </div>\r\n\r\n    <angular-slickgrid gridId="grid2"\r\n        gridHeight="200"\r\n        gridWidth="800"\r\n        [columnDefinitions]="columnDefinitions2"\r\n        [gridOptions]="gridOptions2"\r\n        [dataset]="dataset2"\r\n        (onAngularGridCreated)="angularGridReady2($event)"\r\n        (sgOnSelectedRowsChanged)="handleSelectedRowsChanged2($event.detail.eventData, $event.detail.args)">\r\n    </angular-slickgrid>\r\n  </div>\r\n'},kFfY:function(t,e){t.exports='<div id="demo-container" class="container">\r\n    <h2>{{title}}</h2>\r\n    <div class="subtitle" [innerHTML]="subTitle"></div>\r\n\r\n    <br>\r\n\r\n    <div class="row col-sm-12">\r\n        <span>\r\n            <label for="">Pinned Rows: </label>\r\n            <input type="number" [(ngModel)]="frozenRowCount">\r\n            <button class="btn btn-outline-secondary btn-xs" (click)="changeFrozenRowCount()">\r\n                Set\r\n            </button>\r\n        </span>\r\n        <span style="margin-left: 10px">\r\n            <label for="">Pinned Columns: </label>\r\n            <input type="number" [(ngModel)]="frozenColumnCount">\r\n            <button class="btn btn-outline-secondary btn-xs" (click)="changeFrozenColumnCount()">\r\n                Set\r\n            </button>\r\n        </span>\r\n        <span style="margin-left: 15px">\r\n            <button class="btn btn-outline-secondary btn-sm" (click)="toggleFrozenBottomRows()">\r\n               <i class="fa fa-random fa-lg"></i> Toggle Pinned Rows\r\n            </button>\r\n            <span style="font-weight: bold;">: {{ isFrozenBottom ? \'Bottom\' : \'Top\' }}</span>\r\n        </span>\r\n    </div>\r\n\r\n    <div class="col-sm-12">\r\n        <hr>\r\n    </div>\r\n\r\n    <angular-slickgrid gridId="grid20"\r\n              gridWidth="875"\r\n              [columnDefinitions]="columnDefinitions"\r\n              [gridOptions]="gridOptions"\r\n              [dataset]="dataset"\r\n              (onAngularGridCreated)="angularGridReady($event)">\r\n    </angular-slickgrid>\r\n</div>\r\n'},lu7S:function(t,e){t.exports='\r\n<div id="demo-container" class="container-fluid">\r\n    <h2>{{title}}</h2>\r\n    <div class="subtitle row" [innerHTML]="subTitle"></div>\r\n\r\n    <div class="row">\r\n        <div class="col-sm-4">\r\n            <div [class]="status.class" role="alert">\r\n                <strong>Status: </strong> {{status.text}}\r\n                <span [hidden]="!processing">\r\n                    <i class="fa fa-refresh fa-spin fa-lg fa-fw"></i>\r\n                </span>\r\n            </div>\r\n\r\n            <br/>\r\n\r\n            <button class="btn btn-outline-secondary btn-sm" (click)="switchLanguage()">Switch Language</button>\r\n            <b>Locale:</b>\r\n            <span style="font-style: italic">{{selectedLanguage + \'.json\'}}</span>\r\n            <br/>\r\n            <span *ngIf="statistics">\r\n                <b>Statistics:</b> {{statistics.endTime | date: \'yyyy-MM-dd HH:mm aaaaa\\\'m\\\'\'}} | {{statistics.executionTime}}ms | {{statistics.totalCount}} items\r\n            </span>\r\n        </div>\r\n        <div class="col-sm-8">\r\n            <div class="alert alert-info">\r\n                <strong>GraphQL Query:</strong>\r\n                <div [innerHTML]="graphqlQuery"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <angular-slickgrid gridId="grid4"\r\n        [gridHeight]="250"\r\n        [gridWidth]="800"\r\n        [columnDefinitions]="columnDefinitions"\r\n        [gridOptions]="gridOptions"\r\n        [dataset]="dataset"\r\n        (onAngularGridCreated)="angularGridReady($event)"\r\n        (onBeforeGridDestroy)="saveCurrentGridState($event)">\r\n    </angular-slickgrid>\r\n</div>\r\n'},"nH/3":function(t,e){t.exports='<nav class="navbar navbar-expand-md navbar-dark bg-dark fixed-top">\r\n  <a class="navbar-brand" href="https://github.com/ghiscoding/Angular-Slickgrid">\r\n    <i class="fa fa-github"></i>\r\n    <span>{{title}}</span>\r\n  </a>\r\n  <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarContent" aria-controls="navbarContent"\r\n    aria-expanded="false" aria-label="Toggle navigation">\r\n    <span class="navbar-toggler-icon"></span>\r\n  </button>\r\n\r\n  <div class="navbar-collapse collapse" id="navbarContent">\r\n    <ul class="navbar-nav mr-auto">\r\n      <li>\r\n        <span class="nav-link" style="position: relative; top: 5px">\r\n          <iframe allowtransparency="true" scrolling="no" frameborder="0" src="https://buttons.github.io/buttons.html#href=https%3A%2F%2Fgithub.com%2Fghiscoding%2FAngular-Slickgrid&amp;aria-label=Star%20ghiscoding%2FAngular-Slickgrid%20on%20GitHub&amp;data-icon=octicon-star&amp;data-text=Star&amp;data-show-count=true"\r\n            style="width: 90px; height: 20px; border: none;"></iframe>\r\n        </span>\r\n      </li>\r\n      <li class="nav-item">\r\n        <a class="nav-link" [routerLink]="[\'/home\']">\r\n          <i class="fa fa-lg fa-home"></i> Home\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</nav>\r\n\r\n<div class="page-host">\r\n  <section class="au-animate side-menu">\r\n    <div class="row">\r\n      <div class="col-sm-3 col-md-2 links">\r\n        <ul class="well nav nav-pills nav-stacked">\r\n          <li class="nav-item">\r\n            <a class="nav-link" routerLinkActive="active" [routerLink]="[\'/basic\']">1- Basic Grid / 2 Grids</a>\r\n          </li>\r\n          <li class="nav-item">\r\n            <a class="nav-link" routerLinkActive="active" [routerLink]="[\'/formatter\']">2- Formatters</a>\r\n          </li>\r\n          <li class="nav-item">\r\n            <a class="nav-link" routerLinkActive="active" [routerLink]="[\'/editor\']">3- Editors</a>\r\n          </li>\r\n          <li class="nav-item">\r\n            <a class="nav-link" routerLinkActive="active" [routerLink]="[\'/clientside\']">4- Client Side Sort/Filter</a>\r\n          </li>\r\n          <li class="nav-item">\r\n            <a class="nav-link" routerLinkActive="active" [routerLink]="[\'/odata\']">5- Backend Server with OData</a>\r\n          </li>\r\n          <li class="nav-item">\r\n            <a class="nav-link" routerLinkActive="active" [routerLink]="[\'/gridgraphql\']">6- Backend Server with GraphQL</a>\r\n          </li>\r\n          <li class="nav-item">\r\n            <a class="nav-link" routerLinkActive="active" [routerLink]="[\'/headerbutton\']">7- Header Button Plugin</a>\r\n          </li>\r\n          <li class="nav-item">\r\n            <a class="nav-link" routerLinkActive="active" [routerLink]="[\'/headermenu\']">8- Header Menu Plugin</a>\r\n          </li>\r\n          <li class="nav-item">\r\n            <a class="nav-link" routerLinkActive="active" [routerLink]="[\'/gridmenu\']">9- Grid Menu (hamburger menu)</a>\r\n          </li>\r\n          <li class="nav-item">\r\n            <a class="nav-link" routerLinkActive="active" [routerLink]="[\'/selection\']">10- Row Selection / 2 Grids</a>\r\n          </li>\r\n          <li class="nav-item">\r\n            <a class="nav-link" routerLinkActive="active" [routerLink]="[\'/additem\']">11- Add/Update/Highlight Datagrid Item</a>\r\n          </li>\r\n          <li class="nav-item">\r\n            <a class="nav-link" routerLinkActive="active" [routerLink]="[\'/localization\']">12- Localization (i18n)</a>\r\n          </li>\r\n          <li class="nav-item">\r\n            <a class="nav-link" routerLinkActive="active" [routerLink]="[\'/swt\']">13- Backend Server Custom Paging</a>\r\n          </li>\r\n          <li class="nav-item">\r\n            <a class="nav-link" routerLinkActive="active" [routerLink]="[\'/grouping\']">14- Grouping &amp; Aggregator</a>\r\n          </li>\r\n          <li class="nav-item">\r\n            <a class="nav-link" routerLinkActive="active" [routerLink]="[\'/colspan\']">15- Column Span</a>\r\n          </li>\r\n          <li class="nav-item">\r\n            <a class="nav-link" routerLinkActive="active" [routerLink]="[\'/gridstate\']">16- Grid State &amp; Local Storage</a>\r\n          </li>\r\n          <li class="nav-item">\r\n            <a class="nav-link" routerLinkActive="active" [routerLink]="[\'/rowmove\']">17- Row Move</a>\r\n          </li>\r\n          <li routerLinkActive="active">\r\n            <a class="nav-link" routerLinkActive="active" [routerLink]="[\'/remote\']">18- Remote Model</a>\r\n          </li>\r\n          <li routerLinkActive="active">\r\n            <a class="nav-link" routerLinkActive="active" [routerLink]="[\'/draggrouping\']">19- Draggable Grouping</a>\r\n          </li>\r\n          <li routerLinkActive="active">\r\n            <a class="nav-link" routerLinkActive="active" [routerLink]="[\'/frozen\']">20- Frozen Columns/Rows</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <div id="app-container" class="col-sm-9 col-md-10">\r\n        <router-outlet></router-outlet>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</div>\r\n'},nUzR:function(t,e){t.exports='\r\n<div id="demo-container" class="container-fluid">\r\n    <h2>{{title}}</h2>\r\n    <div class="subtitle" [innerHTML]="subTitle"></div>\r\n\r\n    <div class="col-sm-12">\r\n        <angular-slickgrid gridId="grid2" (onDataviewCreated)="dataviewReady($event)" (onGridCreated)="gridReady($event)"\r\n            [columnDefinitions]="columnDefinitions" [gridOptions]="gridOptions" [dataset]="dataset">\r\n        </angular-slickgrid>\r\n    </div>\r\n</div>\r\n'},pRi4:function(t,e){t.exports='\r\n<div id="demo-container" class="container-fluid">\r\n    <h2>{{title}}</h2>\r\n    <div class="subtitle" [innerHTML]="subTitle"></div>\r\n\r\n    <angular-slickgrid gridId="grid2"\r\n        [columnDefinitions]="columnDefinitions"\r\n        [gridOptions]="gridOptions"\r\n        [dataset]="dataset"\r\n        gridHeight="500"\r\n        gridWidth="800">\r\n    </angular-slickgrid>\r\n  </div>\r\n'},"sx++":function(t,e){t.exports="/** You can change the pinned/frozen border styling through this css override */\n.slick-row .slick-cell.frozen:last-child,\n.slick-headerrow-column.frozen:last-child,\n.slick-footerrow-column.frozen:last-child {\n  border-right: 1px solid #969696 !important; }\n.slick-pane-bottom {\n  border-top: 1px solid #969696 !important; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZXhhbXBsZXMvQzpcXHNvdXJjZWNvZGVcXEdpdEh1YlxcYW5ndWxhci1zbGlja2dyaWQtYnM0LWRlbW8vc3JjXFxhcHBcXGV4YW1wbGVzXFxncmlkLWZyb3plbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnRkFBZ0Y7QUFFaEY7OztFQUdFLDJDQUEwQyxFQUMzQztBQUVEO0VBQ0UseUNBQXdDLEVBQ3pDIiwiZmlsZSI6InNyYy9hcHAvZXhhbXBsZXMvZ3JpZC1mcm96ZW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiogWW91IGNhbiBjaGFuZ2UgdGhlIHBpbm5lZC9mcm96ZW4gYm9yZGVyIHN0eWxpbmcgdGhyb3VnaCB0aGlzIGNzcyBvdmVycmlkZSAqL1xyXG5cclxuLnNsaWNrLXJvdyAuc2xpY2stY2VsbC5mcm96ZW46bGFzdC1jaGlsZCxcclxuLnNsaWNrLWhlYWRlcnJvdy1jb2x1bW4uZnJvemVuOmxhc3QtY2hpbGQsXHJcbi5zbGljay1mb290ZXJyb3ctY29sdW1uLmZyb3plbjpsYXN0LWNoaWxkIHtcclxuICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjOTY5Njk2ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5zbGljay1wYW5lLWJvdHRvbSB7XHJcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICM5Njk2OTYgIWltcG9ydGFudDtcclxufVxyXG4iXX0= */"},x5TO:function(t,e){t.exports='<div id="demo-container" class="container-fluid">\r\n    <h2>{{title}}</h2>\r\n    <div class="subtitle" [innerHTML]="subTitle"></div>\r\n\r\n    <form class="form-inline">\r\n        <div class="row col-sm-12">\r\n          <button class="btn btn-outline-secondary btn-xs" (click)="loadData(500)">\r\n            500 rows\r\n          </button>\r\n          <button class="btn btn-outline-secondary btn-xs" (click)="loadData(50000)">\r\n            50k rows\r\n          </button>\r\n          <button class="btn btn-outline-secondary btn-xs" (click)="clearGroupsAndSelects()">\r\n            Clear grouping\r\n          </button>\r\n          <button class="btn btn-outline-secondary btn-xs" (click)="collapseAllGroups()">\r\n            Collapse all groups\r\n          </button>\r\n          <button class="btn btn-outline-secondary btn-xs" (click)="expandAllGroups()">\r\n            Expand all groups\r\n          </button>\r\n          <button class="btn btn-outline-secondary btn-xs" (click)="toggleDraggableGroupingRow()">\r\n            Toggle Draggable Grouping Row\r\n          </button>\r\n        </div>\r\n\r\n        <div class="row col-sm-12">\r\n          <button class="btn btn-outline-secondary btn-xs" (click)="groupByDurationOrderByCount(false)">\r\n            Group by duration &amp; sort groups by value\r\n          </button>\r\n          <button class="btn btn-outline-secondary btn-xs" (click)="groupByDurationOrderByCount(true)">\r\n            Group by duration &amp; sort groups by count\r\n          </button>\r\n          <button class="btn btn-outline-secondary btn-xs" (click)="groupByDurationEffortDriven()">\r\n            Group by Duration then Effort-Driven\r\n          </button>\r\n        </div>\r\n        <div class="col-sm-12">\r\n            <br>\r\n        </div>\r\n        <div class="row col-sm-12">\r\n            <div class="form-row">\r\n              <div class="form-group">\r\n                  <label for="field1" class="col-sm-3 mb-2">Group by field(s)</label>\r\n                  <div class="form-group col-md-3" *ngFor="let groupField of selectedGroupingFields; let i = index; trackBy: selectTrackByFn">\r\n                      <select class="form-control" name="groupField{{i}}" [(ngModel)]="selectedGroupingFields[i]" (ngModelChange)="groupByFieldName($event, i)">\r\n                          <option value=""></option>\r\n                          <option [ngValue]="field.id" *ngFor="let field of columnDefinitions">{{field.name}}</option>\r\n                      </select>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n\r\n    <div class="col-sm-12">\r\n      <hr>\r\n    </div>\r\n\r\n    <angular-slickgrid gridId="grid19"\r\n        [dataset]="dataset"\r\n        [columnDefinitions]="columnDefinitions"\r\n        [gridOptions]="gridOptions"\r\n        (onAngularGridCreated)="angularGridReady($event)">\r\n    </angular-slickgrid>\r\n</div>\r\n'},ynWL:function(t,e){t.exports=".body-content {\n  margin-top: 58px; }\n\n.red {\n  color: red; }\n\n.faded {\n  opacity: 0.2; }\n\n.faded:hover {\n  opacity: 0.5; }\n\n.links {\n  background-color: #f9f9f9;\n  border-right: 1px solid #d0d0d0;\n  overflow-y: auto;\n  padding-top: 10px;\n  /* the height is 100% minus the 2 navbars */\n  height: calc(100vh - 58px); }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvQzpcXHNvdXJjZWNvZGVcXEdpdEh1YlxcYW5ndWxhci1zbGlja2dyaWQtYnM0LWRlbW8vc3JjXFxhcHBcXGFwcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFnQixFQUNqQjs7QUFDRDtFQUNFLFdBQVUsRUFDWDs7QUFDRDtFQUNJLGFBQVksRUFDZjs7QUFDRDtFQUNJLGFBQVksRUFDZjs7QUFDRDtFQUNFLDBCQUF5QjtFQUN6QixnQ0FBK0I7RUFDL0IsaUJBQWdCO0VBQ2hCLGtCQUFpQjtFQUVqQiw0Q0FBNEM7RUFDNUMsMkJBQTBCLEVBQzNCIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJvZHktY29udGVudCB7XHJcbiAgbWFyZ2luLXRvcDogNThweDtcclxufVxyXG4ucmVkIHtcclxuICBjb2xvcjogcmVkO1xyXG59XHJcbi5mYWRlZCB7XHJcbiAgICBvcGFjaXR5OiAwLjI7XHJcbn1cclxuLmZhZGVkOmhvdmVyIHtcclxuICAgIG9wYWNpdHk6IDAuNTtcclxufVxyXG4ubGlua3Mge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmOWY5Zjk7XHJcbiAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgI2QwZDBkMDtcclxuICBvdmVyZmxvdy15OiBhdXRvO1xyXG4gIHBhZGRpbmctdG9wOiAxMHB4O1xyXG5cclxuICAvKiB0aGUgaGVpZ2h0IGlzIDEwMCUgbWludXMgdGhlIDIgbmF2YmFycyAqL1xyXG4gIGhlaWdodDogY2FsYygxMDB2aCAtIDU4cHgpO1xyXG59XHJcbiJdfQ== */"},zUnb:function(t,e,i){"use strict";i.r(e);var n=i("CcnG"),r=i("ToYH"),a=i("mrSG"),o=i("ZYCi"),l=i("WzUx"),s=function(){function t(){this.title="Example 11: Add / Update / Highlight a Datagrid Item",this.subTitle='\n  Add / Update / Hightlight an Item from the Datagrid (<a href="https://github.com/ghiscoding/Angular-Slickgrid/wiki/Add,-Update-or-Highlight-a-Datagrid-Item" target="_blank">Wiki docs</a>).\n  <ul>\n    <li><b>Note:</b> this demo is <b>only</b> on the datagrid (client) side, you still need to deal with the backend yourself</li>\n    <li>Adding an item, will always be showing as the 1st item in the grid because that is the best visual place to add it</li>\n    <li>Add/Update an item requires a valid Slickgrid Selection Model, you have 2 choices to deal with this:</li>\n    <ul><li>You can enable "enableCheckboxSelector" or "enableRowSelection" to True</li></ul>\n    <li>Click on any of the buttons below to test this out</li>\n    <li>You can change the highlighted color &amp; animation by changing the <a href="https://github.com/ghiscoding/Angular-Slickgrid/blob/master/src/app/modules/angular-slickgrid/styles/_variables.scss" target="_blank">SASS Variables</a>:</li>\n    <ul>\n      <li>"$row-highlight-background-color" or "$row-highlight-fade-animation"</li>\n    </ul>\n    <li>You can also add CSS class(es) on the fly (or on page load) on rows with certain criteria, (e.g. click on last button)\n    <ul>\n      <li>Example, click on button "Highlight Rows with Duration over 50" to see row styling changing. <a href="https://github.com/ghiscoding/Angular-Slickgrid/wiki/Dynamically-Add-CSS-Classes-to-Item-Rows" target="_blank">Wiki doc</a></li>\n  </ul>\n  '}return t.prototype.angularGridReady=function(t){this.angularGrid=t,this.dataView=t.dataView,this.grid=t.slickGrid,this.gridService=t.gridService},t.prototype.ngOnInit=function(){this.columnDefinitions=[{id:"title",name:"Title",field:"title",sortable:!0,type:l.f.string,editor:{model:l.e.longText}},{id:"duration",name:"Duration (days)",field:"duration",sortable:!0,type:l.f.number,editor:{model:l.e.text},onCellChange:function(t,e){alert("onCellChange directly attached to the column definition"),console.log(e)}},{id:"complete",name:"% Complete",field:"percentComplete",formatter:l.i.percentCompleteBar,type:l.f.number,editor:{model:l.e.integer}},{id:"start",name:"Start",field:"start",formatter:l.i.dateIso,sortable:!0,type:l.f.date},{id:"finish",name:"Finish",field:"finish",formatter:l.i.dateIso,sortable:!0,type:l.f.date},{id:"effort-driven",name:"Effort Driven",field:"effortDriven",formatter:l.i.checkmark,type:l.f.number,editor:{model:l.e.checkbox}}],this.gridOptions={asyncEditorLoading:!1,autoResize:{containerId:"demo-container",sidePadding:15},editable:!0,enableColumnPicker:!0,enableCellNavigation:!0,enableRowSelection:!0};for(var t=[],e=0;e<1e3;e++){var i=2e3+Math.floor(10*Math.random()),n=Math.floor(11*Math.random()),r=Math.floor(29*Math.random()),a=Math.round(100*Math.random());t[e]={id:e,title:"Task "+e,duration:Math.round(100*Math.random())+"",percentComplete:a,percentCompleteNumber:a,start:new Date(i,n,r),finish:new Date(i,n+1,r),effortDriven:e%5==0}}this.dataset=t},t.prototype.addNewItem=function(){var t=this.dataset.length,e=2e3+Math.floor(10*Math.random()),i=Math.floor(11*Math.random()),n=Math.floor(29*Math.random()),r=Math.round(100*Math.random()),a={id:t,title:"Task "+t,duration:Math.round(100*Math.random())+"",percentComplete:r,percentCompleteNumber:r,start:new Date(e,i,n),finish:new Date(e,i+2,n),effortDriven:!0};this.angularGrid.gridService.addItemToDatagrid(a)},t.prototype.highlighFifthRow=function(){this.angularGrid.gridService.highlightRow(4,1500)},t.prototype.changeDurationBackgroundColor=function(){this.dataView.getItemMetadata=this.updateItemMetadataForDurationOver50(this.dataView.getItemMetadata),this.grid.invalidate(),this.grid.render()},t.prototype.updateItemMetadataForDurationOver50=function(t){var e=this;return function(i){var n=e.dataView.getItem(i),r={cssClasses:""};("object"==typeof t&&(r=t(i)),r&&n&&n.duration)&&(+n.duration>50&&(r.cssClasses=(r.cssClasses||"")+" duration-bg"));return r}},t.prototype.updateSecondItem=function(){var t=this.angularGrid.gridService.getDataItemByRowNumber(1);t.duration=Math.round(100*Math.random()),this.angularGrid.gridService.updateDataGridItem(t)},t=a.c([Object(n.n)({encapsulation:n.mb.None,template:i("DyK0"),styles:[".duration-bg { background-color: #e9d4f1 !important }"]}),Object(n.A)(),a.f("design:paramtypes",[])],t)}(),d=i("A7o+"),c=function(){function t(t){this.translate=t,this.title="Example 9: Grid Menu Control",this.subTitle='\n    This example demonstrates using the <b>Slick.Controls.GridMenu</b> plugin to easily add a Grid Menu (aka hamburger menu) on the top right corner of the grid.\n    (<a href="https://github.com/ghiscoding/Angular-Slickgrid/wiki/Grid-Menu" target="_blank">Wiki docs</a>)\n    <br/>\n    <ul>\n      <li>The Grid Menu uses the following icon by default "fa-bars"&nbsp;&nbsp;<span class="fa fa-bars"></span>&nbsp;&nbsp;(which looks like a hamburger, hence the name)</li>\n      <ul><li>Another icon which you could use is "fa-ellipsis-v"&nbsp;&nbsp;<span class="fa fa-ellipsis-v"></span>&nbsp;&nbsp;(which is shown in this example)</li></ul>\n      <li>By default the Grid Menu shows all columns which you can show/hide</li>\n      <li>You can configure multiple "commands" to show up in the Grid Menu and use the "onGridMenuCommand()" callback</li>\n      <li>Doing a "right+click" over any column header will also provide a way to show/hide a column (via the Column Picker Plugin)</li>\n    </ul>\n  ',this.selectedLanguage=this.translate.getDefaultLang()}return t.prototype.ngOnInit=function(){this.columnDefinitions=[{id:"title",name:"Title",field:"title",headerKey:"TITLE",filterable:!0,type:l.f.string},{id:"duration",name:"Duration",field:"duration",headerKey:"DURATION",sortable:!0,filterable:!0,type:l.f.string},{id:"%",name:"% Complete",field:"percentComplete",sortable:!0,filterable:!0,type:l.f.number,formatter:l.i.percentCompleteBar,filter:{model:l.h.compoundSlider,params:{hideSliderNumber:!1}}},{id:"start",name:"Start",field:"start",headerKey:"START",filterable:!0,type:l.f.string},{id:"finish",name:"Finish",field:"finish",headerKey:"FINISH",filterable:!0,type:l.f.string},{id:"effort-driven",name:"Completed",field:"effortDriven",headerKey:"COMPLETED",maxWidth:80,formatter:l.i.checkmark,type:l.f.boolean,minWidth:100,sortable:!0,filterable:!0,filter:{collection:[{value:"",label:""},{value:!0,label:"true"},{value:!1,label:"false"}],model:l.h.singleSelect}}],this.visibleColumns=this.columnDefinitions,this.gridOptions={columnPicker:{hideForceFitButton:!0,hideSyncResizeButton:!0,onColumnsChanged:function(t,e){console.log("Column selection changed from Column Picker, visible columns: ",e.columns)}},enableAutoResize:!0,enableGridMenu:!0,autoResize:{containerId:"demo-container",sidePadding:15},enableFiltering:!0,enableCellNavigation:!0,gridMenu:{customTitleKey:"CUSTOM_COMMANDS",iconCssClass:"fa fa-ellipsis-v",hideForceFitButton:!0,hideSyncResizeButton:!0,hideToggleFilterCommand:!1,menuWidth:17,resizeOnShowHeaderRow:!0,customItems:[{iconCssClass:"fa fa-question-circle",titleKey:"HELP",disabled:!1,command:"help",positionOrder:99},{title:"Disabled command",disabled:!0,command:"disabled-command",positionOrder:98}],onCommand:function(t,e){"help"===e.command&&alert("Please help!!!")},onColumnsChanged:function(t,e){console.log("Column selection changed from Grid Menu, visible columns: ",e.columns)}},enableTranslate:!0,i18n:this.translate},this.getData()},t.prototype.angularGridReady=function(t){this.angularGrid=t},t.prototype.getData=function(){for(var t=[],e=0;e<500;e++)t[e]={id:e,title:"Task "+e,duration:Math.round(25*Math.random())+" days",percentComplete:Math.round(100*Math.random()),start:"01/01/2009",finish:"01/05/2009",effortDriven:e%5==0};this.dataset=t},t.prototype.switchLanguage=function(){this.selectedLanguage="en"===this.selectedLanguage?"fr":"en",this.translate.use(this.selectedLanguage)},t=a.c([Object(n.n)({template:i("Y4ym")}),Object(n.A)(),a.f("design:paramtypes",[d.c])],t)}(),u=function(){function t(){this.title="Example 1: Basic Grid",this.subTitle='\n    Basic Grid with fixed sizes (800 x 400) set by "gridHeight" &amp; "gridWidth"\n    <ul>\n      <li><a href="https://github.com/ghiscoding/Angular-Slickgrid/wiki/HOWTO---Step-by-Step" target="_blank">Wiki HOWTO link</a></li>\n    </ul>\n  '}return t.prototype.ngOnInit=function(){this.columnDefinitions1=[{id:"title",name:"Title",field:"title",sortable:!0},{id:"duration",name:"Duration (days)",field:"duration",sortable:!0},{id:"%",name:"% Complete",field:"percentComplete",sortable:!0},{id:"start",name:"Start",field:"start"},{id:"finish",name:"Finish",field:"finish"},{id:"effort-driven",name:"Effort Driven",field:"effortDriven",sortable:!0}],this.gridOptions1={enableAutoResize:!1,enableSorting:!0},this.columnDefinitions2=this.columnDefinitions1,this.gridOptions2=this.gridOptions1,this.dataset1=this.mockData(),this.dataset2=this.mockData()},t.prototype.mockData=function(){for(var t=[],e=0;e<1e3;e++){var i=2e3+Math.floor(10*Math.random()),n=Math.floor(11*Math.random()),r=Math.floor(29*Math.random()),a=Math.round(100*Math.random());t[e]={id:e,title:"Task "+e,duration:Math.round(100*Math.random())+"",percentComplete:a,start:n+"/"+r+"/"+i,finish:n+"/"+r+"/"+i,effortDriven:e%5==0}}return t},t=a.c([Object(n.n)({template:i("BQc2")})],t)}(),p=i("t/Na"),g=function(){function t(){this.operator=l.n.equal}return t.prototype.init=function(t){var e=this;this.grid=t.grid,this.callback=t.callback,this.columnDef=t.columnDef,this.searchTerms=t.searchTerms||[];var i=Array.isArray(this.searchTerms)&&this.searchTerms[0]||"",n=this.buildTemplateHtmlString();this.$filterElm=this.createDomElement(n,i),this.$filterElm.keyup(function(t){return e.callback(t,{columnDef:e.columnDef})})},t.prototype.clear=function(){this.$filterElm&&(this.$filterElm.val(""),this.$filterElm.trigger("keyup"))},t.prototype.destroy=function(){this.$filterElm&&this.$filterElm.off("keyup").remove()},t.prototype.setValues=function(t){t&&this.$filterElm.val(t)},t.prototype.buildTemplateHtmlString=function(){return'<input type="text" class="form-control search-filter" placeholder="Custom Filter">'},t.prototype.createDomElement=function(t,e){var i=this.grid.getHeaderRowColumn(this.columnDef.id);$(i).empty();var n=$(t);return n.val(e),n.attr("id","filter-"+this.columnDef.id),n.data("columnId",this.columnDef.id),n&&"function"==typeof n.appendTo&&n.appendTo(i),n},t}();function h(t,e){return Math.floor(Math.random()*(e-t+1)+t)}var m=function(){function t(t,e){this.http=t,this.translate=e,this.title="Example 4: Client Side Sort/Filter",this.subTitle='\n    Sort/Filter on client side only using SlickGrid DataView (<a href="https://github.com/ghiscoding/Angular-Slickgrid/wiki/Sorting" target="_blank">Wiki docs</a>)\n    <br/>\n    <ul class="small">\n      <li>Support multi-sort (by default), hold "Shift" key and click on the next column to sort.\n      <li>All column types support the following operators: (>, >=, <, <=, <>, !=, =, ==, *)\n      <ul>\n        <li>Example: >100 ... >=2001-01-01 ... >02/28/17</li>\n        <li><b>Note:</b> For filters to work properly (default is string), make sure to provide a FieldType (type is against the dataset, not the Formatter)</li>\n      </ul>\n      <li>Date Filters</li>\n      <ul>\n        <li>FieldType of dateUtc/date (from dataset) can use an extra option of "filterSearchType" to let user filter more easily. For example, in the "UTC Date" field below, you can type "&gt;02/28/2017", also when dealing with UTC you have to take the time difference in consideration.</li>\n      </ul>\n      <li>On String filters, (*) can be used as startsWith (Hello* => matches "Hello Word") ... endsWith (*Doe => matches: "John Doe")</li>\n      <li>Custom Filter are now possible, "Description" column below, is a customized InputFilter with different placeholder. See <a href="https://github.com/ghiscoding/Angular-Slickgrid/wiki/Custom-Filter" target="_blank">Wiki - Custom Filter</a>\n      <li>MultipleSelect & SingeSelect Filters can use a regular "collection" or "collectionAsync" to load it asynchronously</li>\n    </ul>\n  '}return t.prototype.ngOnInit=function(){this.columnDefinitions=[{id:"title",name:"Title",field:"title",sortable:!0,minWidth:55,type:l.f.string,filterable:!0,filter:{model:l.h.compoundInput}},{id:"description",name:"Description",field:"description",filterable:!0,sortable:!0,minWidth:80,type:l.f.string,filter:{model:new g}},{id:"duration",name:"Duration (days)",field:"duration",sortable:!0,type:l.f.number,exportCsvForceToKeepAsString:!0,minWidth:55,filterable:!0,filter:{collectionAsync:this.http.get("assets/data/collection_500_numbers.json"),collectionFilterBy:{property:"value",operator:l.n.notEqual,value:365},collectionSortBy:{property:"value",sortDesc:!0,fieldType:l.f.number},customStructure:{value:"value",label:"label",labelSuffix:"text"},collectionOptions:{separatorBetweenTextLabels:" "},model:l.h.multipleSelect,filterOptions:{maxHeight:250,width:175}}},{id:"complete",name:"% Complete",field:"percentComplete",formatter:l.i.percentCompleteBar,minWidth:70,type:l.f.number,sortable:!0,filterable:!0,filter:{model:l.h.compoundInput}},{id:"start",name:"Start",field:"start",formatter:l.i.dateIso,sortable:!0,minWidth:75,exportWithFormatter:!0,type:l.f.date,filterable:!0,filter:{model:l.h.compoundDate}},{id:"usDateShort",name:"US Date Short",field:"usDateShort",exportWithFormatter:!0,sortable:!0,minWidth:70,width:70,type:l.f.dateUsShort,filterable:!0,filter:{model:l.h.compoundDate}},{id:"utcDate",name:"UTC Date",field:"utcDate",exportWithFormatter:!0,formatter:l.i.dateTimeIsoAmPm,sortable:!0,minWidth:115,type:l.f.dateUtc,outputType:l.f.dateTimeIsoAmPm,filterable:!0,filter:{model:l.h.compoundDate}},{id:"effort-driven",name:"Effort Driven",field:"effortDriven.isEffort",minWidth:85,maxWidth:85,type:l.f.boolean,sortable:!0,formatter:l.i.multiple,params:{formatters:[l.i.complexObject,l.i.checkmark]},filterable:!0,filter:{collection:[{isEffort:"",label:""},{isEffort:!0,label:"True"},{isEffort:!1,label:"False"}],customStructure:{value:"isEffort",label:"label"},model:l.h.singleSelect,filterOptions:{autoDropWidth:!0}}}],this.gridOptions={autoResize:{containerId:"demo-container",sidePadding:15},enableExcelCopyBuffer:!0,enableFiltering:!0,i18n:this.translate,presets:{filters:[{columnId:"duration",searchTerms:[2,22,44]},{columnId:"usDateShort",operator:"<",searchTerms:["4/20/25"]}],sorters:[{columnId:"duration",direction:"DESC"},{columnId:"complete",direction:"ASC"}]}},this.dataset=this.mockData(500)},t.prototype.angularGridReady=function(t){this.angularGrid=t},t.prototype.mockData=function(t,e){void 0===e&&(e=0);for(var i=[],n=e;n<e+t;n++){var r=Math.round(100*Math.random()),a=h(2e3,2025),o=h(10,25),l=h(1,12),s=l<10?"0"+l:l,d=h(10,28),c=h(0,100),u=h(10,23),p=h(10,59),g=n%3==0;i.push({id:n,title:"Task "+n,description:n%5?"desc "+n:null,duration:r,percentComplete:c,percentCompleteNumber:c,start:n%4?null:new Date(a,l,d),usDateShort:l+"/"+d+"/"+o,utcDate:a+"-"+s+"-"+d+"T"+u+":"+p+":"+p+"Z",effortDriven:{isEffort:g,label:g?"Effort":"NoEffort"}})}return i},t.prototype.gridStateChanged=function(t){console.log("Client sample, Grid State changed:: ",t)},t.prototype.saveCurrentGridState=function(t){console.log("Client sample, last Grid State:: ",this.angularGrid.gridStateService.getCurrentGridState())},t.prototype.refreshStatistics=function(t,e){var i=this;e&&e.current>0&&setTimeout(function(){i.statistics={startTime:new Date,itemCount:e&&e.current,totalItemCount:i.dataset.length}})},t=a.c([Object(n.n)({template:i("K9ae")}),a.f("design:paramtypes",[p.a,d.c])],t)}(),f=function(){function t(){this.title="Example 15: Column Span & Header Grouping",this.subTitle='\n  This example demonstrates how to easily span a row over multiple columns & how to group header titles.\n  <ul>\n    <li>\n      Row Colspan - (<a href="https://github.com/ghiscoding/Angular-Slickgrid/wiki/Row-Colspan" target="_blank">Wiki docs</a>) |\n      Header Grouping - (<a href="https://github.com/ghiscoding/Angular-Slickgrid/wiki/Header-Title-Grouping" target="_blank">Wiki docs</a>)\n    </li>\n    <li>Note that you can add Sort but remember that it will sort by the data that the row contains, even if the data is visually hidden by colspan it will still sort it</li>\n    <li>\n      Header Grouping spanning accross multiple columns is working but has some UI issues on window resize.\n      If anyone can fix it, probably some CSS issues, please let us know.\n    </li>\n  </ul>\n  ',this.dataset=[]}return t.prototype.ngOnInit=function(){this.columnDefinitions=[{id:"title",name:"Title",field:"title",sortable:!0,columnGroup:"Common Factor"},{id:"duration",name:"Duration",field:"duration",columnGroup:"Common Factor"},{id:"start",name:"Start",field:"start",columnGroup:"Period"},{id:"finish",name:"Finish",field:"finish",columnGroup:"Period"},{id:"%",name:"% Complete",field:"percentComplete",selectable:!1,columnGroup:"Analysis"},{id:"effort-driven",name:"Effort Driven",field:"effortDriven",type:l.f.boolean,columnGroup:"Analysis"}],this.gridOptions={enableAutoResize:!1,enableCellNavigation:!0,enableColumnReorder:!1,enableSorting:!0,createPreHeaderPanel:!0,showPreHeaderPanel:!0,preHeaderPanelHeight:25,explicitInitialization:!0,colspanCallback:this.renderDifferentColspan},this.getData()},t.prototype.getData=function(){for(var t=[],e=0;e<500;e++)t[e]={id:e,title:"Task "+e,duration:"5 days",percentComplete:Math.round(100*Math.random()),start:"01/01/2009",finish:"01/05/2009",effortDriven:e%5==0};this.dataset=t},t.prototype.renderDifferentColspan=function(t){return t.id%2==1?{columns:{duration:{colspan:3}}}:{columns:{0:{colspan:"*"}}}},t=a.c([Object(n.n)({template:i("pRi4")})],t)}(),b=function(){function t(){this.title="Example 19: Draggable Grouping & Aggregators",this.subTitle='\n      <ul>\n        <li><a href="https://github.com/ghiscoding/Angular-Slickgrid/wiki/Grouping-&-Aggregators" target="_blank">Wiki docs</a></li>\n        <li>This example shows 3 ways of grouping</li>\n        <ol>\n          <li>Drag any Column Header on the top placeholder to group by that column (support moti-columns grouping by adding more columns to the drop area).</li>\n          <li>Use buttons and defined functions to group by wichever field you want</li>\n          <li>Use the Select dropdown to group, the position of the Selects represent the grouping level</li>\n        </ol>\n        <li>Fully dynamic and interactive multi-level grouping with filtering and aggregates ovor 50\'000 items</li>\n        <li>Each grouping level can have its own aggregates (over child rows, child groups, or all descendant rows)..</li>\n        <li>Use "Aggregators" and "GroupTotalFormatters" directly from Angular-Slickgrid</li>\n      </ul>\n    ',this.durationOrderByCount=!1,this.processing=!1,this.selectedGroupingFields=["","",""],this.loadData(500),this.defineGrid()}return t.prototype.ngOnInit=function(){this.defineGrid()},t.prototype.angularGridReady=function(t){this.angularGrid=t,this.gridObj=t.slickGrid,this.dataviewObj=t.dataView},t.prototype.defineGrid=function(){var t=this;this.columnDefinitions=[{id:"title",name:"Title",field:"title",width:70,minWidth:50,cssClass:"cell-title",filterable:!0,sortable:!0,grouping:{getter:"title",formatter:function(t){return"Title:  "+t.value+'  <span style="color:green">('+t.count+" items)</span>"},aggregators:[new l.a.Sum("cost")],aggregateCollapsed:!1,collapsed:!1}},{id:"duration",name:"Duration",field:"duration",width:70,sortable:!0,filterable:!0,filter:{model:l.h.slider,operator:">="},type:l.f.number,groupTotalsFormatter:l.l.sumTotals,grouping:{getter:"duration",formatter:function(t){return"Duration:  "+t.value+'  <span style="color:green">('+t.count+" items)</span>"},comparer:function(e,i){return t.durationOrderByCount?e.count-i.count:l.q.numeric(e.value,i.value,l.p.asc)},aggregators:[new l.a.Sum("cost")],aggregateCollapsed:!1,collapsed:!1}},{id:"percentComplete",name:"% Complete",field:"percentComplete",minWidth:70,width:90,formatter:l.i.percentCompleteBar,type:l.f.number,filterable:!0,filter:{model:l.h.compoundSlider},sortable:!0,groupTotalsFormatter:l.l.avgTotalsPercentage,grouping:{getter:"percentComplete",formatter:function(t){return"% Complete:  "+t.value+'  <span style="color:green">('+t.count+" items)</span>"},aggregators:[new l.a.Sum("cost")],aggregateCollapsed:!1,collapsed:!1},params:{groupFormatterPrefix:"<i>Avg</i>: "}},{id:"start",name:"Start",field:"start",minWidth:60,sortable:!0,filterable:!0,filter:{model:l.h.compoundDate},formatter:l.i.dateIso,type:l.f.dateUtc,outputType:l.f.dateIso,exportWithFormatter:!0,grouping:{getter:"start",formatter:function(t){return"Start: "+t.value+'  <span style="color:green">('+t.count+" items)</span>"},aggregators:[new l.a.Sum("cost")],aggregateCollapsed:!1,collapsed:!1}},{id:"finish",name:"Finish",field:"finish",minWidth:60,sortable:!0,filterable:!0,filter:{model:l.h.compoundDate},formatter:l.i.dateIso,type:l.f.dateUtc,outputType:l.f.dateIso,exportWithFormatter:!0,grouping:{getter:"finish",formatter:function(t){return"Finish: "+t.value+' <span style="color:green">('+t.count+" items)</span>"},aggregators:[new l.a.Sum("cost")],aggregateCollapsed:!1,collapsed:!1}},{id:"cost",name:"Cost",field:"cost",width:90,sortable:!0,filterable:!0,filter:{model:l.h.compoundInput},formatter:l.i.dollar,groupTotalsFormatter:l.l.sumTotalsDollar,type:l.f.number,grouping:{getter:"cost",formatter:function(t){return"Cost: "+t.value+' <span style="color:green">('+t.count+" items)</span>"},aggregators:[new l.a.Sum("cost")],aggregateCollapsed:!0,collapsed:!0}},{id:"effortDriven",name:"Effort Driven",field:"effortDriven",width:80,minWidth:20,maxWidth:100,cssClass:"cell-effort-driven",sortable:!0,filterable:!0,filter:{collection:[{value:"",label:""},{value:!0,label:"True"},{value:!1,label:"False"}],model:l.h.singleSelect},formatter:l.i.checkmark,grouping:{getter:"effortDriven",formatter:function(t){return"Effort-Driven: "+(t.value?"True":"False")+' <span style="color:green">('+t.count+" items)</span>"},aggregators:[new l.a.Sum("cost")],collapsed:!1}}],this.gridOptions={autoResize:{containerId:"demo-container",sidePadding:15},enableDraggableGrouping:!0,createPreHeaderPanel:!0,showPreHeaderPanel:!0,preHeaderPanelHeight:40,enableFiltering:!0,enableSorting:!0,enableColumnReorder:!0,exportOptions:{sanitizeDataExport:!0},gridMenu:{onCommand:function(e,i){"toggle-preheader"===i.command&&t.clearGrouping()}},draggableGrouping:{dropPlaceHolderText:"Drop a column header here to group by the column",deleteIconCssClass:"fa fa-times",onGroupChanged:function(e,i){return t.onGroupChanged(i&&i.groupColumns)},onExtensionRegistered:function(e){return t.draggableGroupingPlugin=e}}},this.loadData(500)},t.prototype.loadData=function(t){this.dataset=[];for(var e=0;e<t;e++){var i=2e3+Math.floor(10*Math.random()),n=Math.floor(11*Math.random()),r=Math.floor(29*Math.random()),a=Math.round(100*Math.random());this.dataset[e]={id:"id_"+e,num:e,title:"Task "+e,duration:Math.round(100*Math.random())+"",percentComplete:a,percentCompleteNumber:a,start:new Date(i,n,r),finish:new Date(i,n+1,r),cost:e%33==0?null:Math.round(1e4*Math.random())/100,effortDriven:e%5==0}}},t.prototype.clearGroupsAndSelects=function(){var t=this;this.selectedGroupingFields.forEach(function(e,i){return t.selectedGroupingFields[i]=""}),this.clearGrouping()},t.prototype.clearGrouping=function(){this.draggableGroupingPlugin&&this.draggableGroupingPlugin.setDroppedGroups&&this.draggableGroupingPlugin.clearDroppedGroups()},t.prototype.collapseAllGroups=function(){this.dataviewObj.collapseAllGroups()},t.prototype.expandAllGroups=function(){this.dataviewObj.expandAllGroups()},t.prototype.groupByDuration=function(){this.clearGrouping(),this.draggableGroupingPlugin&&this.draggableGroupingPlugin.setDroppedGroups&&(this.showPreHeader(),this.draggableGroupingPlugin.setDroppedGroups("duration"),this.gridObj.invalidate(),this.gridObj.render())},t.prototype.groupByDurationOrderByCount=function(t){void 0===t&&(t=!1),this.durationOrderByCount=t,this.clearGrouping(),this.groupByDuration()},t.prototype.groupByDurationEffortDriven=function(){this.clearGrouping(),this.draggableGroupingPlugin&&this.draggableGroupingPlugin.setDroppedGroups&&(this.showPreHeader(),this.draggableGroupingPlugin.setDroppedGroups(["duration","effortDriven"]),this.gridObj.invalidate(),this.gridObj.render())},t.prototype.groupByFieldName=function(t,e){if(this.clearGrouping(),this.draggableGroupingPlugin&&this.draggableGroupingPlugin.setDroppedGroups){var i=this.selectedGroupingFields.filter(function(t){return""!==t});this.showPreHeader(),this.draggableGroupingPlugin.setDroppedGroups(i),this.gridObj.invalidate(),this.gridObj.render()}},t.prototype.onGroupChanged=function(t){var e=this;Array.isArray(this.selectedGroupingFields)&&Array.isArray(t)&&t.length>0&&this.selectedGroupingFields.forEach(function(i,n){return e.selectedGroupingFields[n]=t[n]&&t[n].getter||""})},t.prototype.showPreHeader=function(){this.gridObj.setPreHeaderPanelVisibility(!0)},t.prototype.selectTrackByFn=function(t,e){return t},t.prototype.toggleDraggableGroupingRow=function(){this.clearGrouping(),this.gridObj.setPreHeaderPanelVisibility(!this.gridObj.getOptions().showPreHeaderPanel)},t=a.c([Object(n.A)(),Object(n.n)({template:i("x5TO")}),a.f("design:paramtypes",[])],t)}(),v=function(){function t(t){this.args=t,this.init()}return t.prototype.init=function(){var t=this;this.$input=$('<input type="text" class="editor-text" placeholder="custom" />').appendTo(this.args.container).on("keydown.nav",function(t){t.keyCode!==l.m.LEFT&&t.keyCode!==l.m.RIGHT||t.stopImmediatePropagation()}),setTimeout(function(){t.$input.focus().select()},50)},t.prototype.destroy=function(){this.$input.remove()},t.prototype.focus=function(){this.$input.focus()},t.prototype.getValue=function(){return this.$input.val()},t.prototype.setValue=function(t){this.$input.val(t)},t.prototype.loadValue=function(t){this.defaultValue=t[this.args.column.field]||"",this.$input.val(this.defaultValue),this.$input[0].defaultValue=this.defaultValue,this.$input.select()},t.prototype.serializeValue=function(){return this.$input.val()},t.prototype.applyValue=function(t,e){t[this.args.column.field]=e},t.prototype.isValueChanged=function(){return!(""===this.$input.val()&&null===this.defaultValue)&&this.$input.val()!==this.defaultValue},t.prototype.validate=function(){if(this.args.column.validator){var t=this.args.column.validator(this.$input.val());if(!t.valid)return t}return{valid:!0,msg:null}},t}(),y=i("K9Ia"),C=function(t,e){var i=e&&e.grid;(i&&i.getOptions?i.getOptions():{}).i18n,e&&e.column&&e.column.internalColumnEditor;return null!=t&&void 0!==t&&t.length?/^Task\s\d+$/.test(t)?{valid:!0,msg:""}:{valid:!1,msg:'Your title is invalid, it must start with "Task" followed by a number'}:{valid:!1,msg:"This is a required field"}},w=function(t,e,i,n,r){if(i&&Array.isArray(i)){var a=i.map(function(t){return"Task "+t}).join(", ");return'<span title="'+a+'">'+a+"</span>"}return""},D=function(){function t(t,e){this.http=t,this.translate=e,this.title="Example 3: Editors",this.subTitle='\n  Grid with Inline Editors and onCellClick actions (<a href="https://github.com/ghiscoding/Angular-Slickgrid/wiki/Editors" target="_blank">Wiki docs</a>).\n  <ul>\n    <li>When using "enableCellNavigation: true", clicking on a cell will automatically make it active &amp; selected.</li>\n    <ul><li>If you don\'t want this behavior, then you should disable "enableCellNavigation"</li></ul>\n    <li>Inline Editors requires "enableCellNavigation: true" (not sure why though)</li>\n    <li>\n        Support Excel Copy Buffer (SlickGrid Copy Manager Plugin), you can use it by simply enabling "enableExcelCopyBuffer" flag.\n        Note that it will only evaluate Formatter when the "exportWithFormatter" flag is enabled (through "ExportOptions" or the column definition)\n    </li>\n    <li>MultipleSelect & SingeSelect Editors & Filters can use a regular "collection" or "collectionAsync" to load it asynchronously</li>\n    <ul>\n      <li>Click on "Add Item" and see the Editor/Filter or the "Prerequesites" column change</li>\n      <li>Any Editor/Filter with a "collection" can be changed dynamically later in the future</li>\n    </ul>\n  </ul>\n  ',this._commandQueue=[],this.isAutoEdit=!0,this.selectedLanguage="en"}return t.prototype.ngOnInit=function(){this.prepareGrid()},t.prototype.angularGridReady=function(t){this.angularGrid=t,this.gridObj=t.slickGrid},t.prototype.prepareGrid=function(){var t=this;this.columnDefinitions=[{id:"edit",field:"id",excludeFromHeaderMenu:!0,formatter:l.i.editIcon,minWidth:30,maxWidth:30,onCellClick:function(e,i){console.log(i),t.alertWarning="Editing: "+i.dataContext.title,t.angularGrid.gridService.highlightRow(i.row,1500),t.angularGrid.gridService.setSelectedRow(i.row)}},{id:"delete",field:"id",excludeFromHeaderMenu:!0,formatter:l.i.deleteIcon,minWidth:30,maxWidth:30},{id:"title",name:"Title",field:"title",minWidth:100,filterable:!0,sortable:!0,type:l.f.string,editor:{model:l.e.longText,validator:C},onCellChange:function(e,i){console.log(i),t.alertWarning="Updated Title: "+i.dataContext.title}},{id:"title2",name:"Title, Custom Editor",field:"title",minWidth:70,filterable:!0,sortable:!0,type:l.f.string,editor:{model:v,placeholder:"custom",validator:C},filter:{model:g,placeholder:"&#128269; custom"}},{id:"duration",name:"Duration (days)",field:"duration",minWidth:100,filterable:!0,sortable:!0,type:l.f.number,filter:{model:l.h.slider,params:{hideSliderNumber:!1}},editor:{model:l.e.slider,minValue:0,maxValue:100}},{id:"complete",name:"% Complete",field:"percentComplete",minWidth:100,filterable:!0,formatter:l.i.multiple,type:l.f.number,editor:{model:l.e.singleSelect,enableRenderHtml:!0,collection:Array.from(Array(101).keys()).map(function(t){return{value:t,label:t,symbol:'<i class="fa fa-percent" style="color:cadetblue"></i>'}}),customStructure:{value:"value",label:"label",labelSuffix:"symbol"},collectionSortBy:{property:"label",sortDesc:!0},collectionFilterBy:{property:"value",value:0,operator:l.n.notEqual},elementOptions:{maxHeight:400}},params:{formatters:[l.i.collectionEditor,l.i.percentCompleteBar]}},{id:"start",name:"Start",field:"start",minWidth:100,filterable:!0,filter:{model:l.h.compoundDate},formatter:l.i.dateIso,sortable:!0,type:l.f.date,editor:{model:l.e.date}},{id:"finish",name:"Finish",field:"finish",minWidth:100,filterable:!0,filter:{model:l.h.compoundDate},formatter:l.i.dateIso,sortable:!0,type:l.f.date,editor:{model:l.e.date}},{id:"cityOfOrigin",name:"City of Origin",field:"cityOfOrigin",filterable:!0,minWidth:100,editor:{model:l.e.autoComplete,placeholder:"&#128269; search city",editorOptions:{minLength:3,source:function(t,e){$.ajax({url:"http://gd.geobytes.com/AutoCompleteCity",dataType:"jsonp",data:{q:t.term},success:function(t){e(t)}})}}},filter:{model:l.h.autoComplete,filterOptions:{minLength:3,source:function(t,e){$.ajax({url:"http://gd.geobytes.com/AutoCompleteCity",dataType:"jsonp",data:{q:t.term},success:function(t){e(t)}})}}}},{id:"countryOfOrigin",name:"Country of Origin",field:"countryOfOrigin",formatter:l.i.complexObject,dataKey:"code",labelKey:"name",type:l.f.object,sorter:l.q.objectString,filterable:!0,minWidth:100,editor:{model:l.e.autoComplete,customStructure:{label:"name",value:"code"},collectionAsync:this.http.get("assets/data/countries.json")},filter:{model:l.h.autoComplete,customStructure:{label:"name",value:"code"},collectionAsync:this.http.get("assets/data/countries.json")}},{id:"effort-driven",name:"Effort Driven",field:"effortDriven",minWidth:70,filterable:!0,type:l.f.boolean,filter:{model:l.h.singleSelect,collection:[{value:"",label:""},{value:!0,label:"True"},{value:!1,label:"False"}]},formatter:l.i.checkmark,editor:{model:l.e.checkbox}},{id:"prerequisites",name:"Prerequisites",field:"prerequisites",minWidth:100,filterable:!0,formatter:w,sortable:!0,type:l.f.string,editor:{collectionAsync:this.http.get("assets/data/collection_100_numbers.json"),collectionSortBy:{property:"label",sortDesc:!0},customStructure:{label:"label",value:"value",labelPrefix:"prefix"},collectionOptions:{separatorBetweenTextLabels:" "},model:l.e.multipleSelect},filter:{collectionAsync:this.http.get("assets/data/collection_100_numbers.json"),collectionSortBy:{property:"label",sortDesc:!0},customStructure:{label:"label",value:"value",labelPrefix:"prefix"},collectionOptions:{separatorBetweenTextLabels:" "},model:l.h.multipleSelect,operator:l.n.inContains}}],this.gridOptions={asyncEditorLoading:!1,autoEdit:this.isAutoEdit,autoCommitEdit:!1,autoResize:{containerId:"demo-container",sidePadding:15},editable:!0,enableCellNavigation:!0,enableColumnPicker:!0,enableExcelCopyBuffer:!0,enableFiltering:!0,editCommandHandler:function(e,i,n){t._commandQueue.push(n),n.execute()},i18n:this.translate},this.dataset=this.mockData(100)},t.prototype.addItem=function(){var t=this,e=this.dataset.length,i=this.mockData(1,e);setTimeout(function(){var n=t.columnDefinitions.find(function(t){return"prerequisites"===t.id});if(n){var r=n.filter.collectionAsync,a=n.editor.collection;Array.isArray(a)&&(t.angularGrid.gridService.addItemToDatagrid(i[0]),a.push({value:e,label:e,prefix:"Task"}),r instanceof y.a&&r.next(a))}},250)},t.prototype.deleteItem=function(){var t=this.columnDefinitions.find(function(t){return"prerequisites"===t.id});if(t){var e=t.filter.collectionAsync,i=t.filter.collection;if(Array.isArray(i)){var n=this.sortCollectionDescending(i).pop();this.angularGrid.gridService.deleteDataGridItemById(n.value),e instanceof y.a&&e.next(i)}}},t.prototype.sortCollectionDescending=function(t){return t.sort(function(t,e){return t.value-e.value})},t.prototype.mockData=function(t,e){void 0===e&&(e=0);for(var i=[],n=e;n<e+t;n++){var r=2e3+Math.floor(10*Math.random()),a=Math.floor(11*Math.random()),o=Math.floor(29*Math.random()),l=Math.round(100*Math.random());i.push({id:n,title:"Task "+n,duration:Math.round(100*Math.random())+"",percentComplete:l,percentCompleteNumber:l,start:new Date(r,a,o),finish:new Date(r,a+1,o),effortDriven:n%5==0,prerequisites:n%2==0&&0!==n&&n<12?[n,n-1]:[],countryOfOrigin:n%2?{code:"CA",name:"Canada"}:{code:"US",name:"United States"},cityOfOrigin:n%2?"Vancouver, BC, Canada":"Boston, MA, United States"})}return i},t.prototype.onCellChanged=function(t,e){this.updatedObject=e.item},t.prototype.onCellClicked=function(t,e){var i=this.angularGrid.gridService.getColumnFromEventArguments(e);console.log(i),"edit"===i.columnDef.id?(this.alertWarning="open a modal window to edit: "+i.dataContext.title,this.angularGrid.gridService.highlightRow(e.row,1500)):"delete"===i.columnDef.id&&confirm("Are you sure?")&&this.angularGrid.gridService.deleteDataGridItemById(i.dataContext.id)},t.prototype.onCellValidation=function(t,e){alert(e.validationResults.msg)},t.prototype.changeAutoCommit=function(){return this.gridOptions.autoCommitEdit=!this.gridOptions.autoCommitEdit,this.gridObj.setOptions({autoCommitEdit:this.gridOptions.autoCommitEdit}),!0},t.prototype.setAutoEdit=function(t){return this.isAutoEdit=t,this.gridObj.setOptions({autoEdit:t}),!0},t.prototype.undo=function(){var t=this._commandQueue.pop();t&&Slick.GlobalEditorLock.cancelCurrentEdit()&&(t.undo(),this.gridObj.gotoCell(t.row,t.cell,!1))},t=a.c([Object(n.n)({template:i("4XDI")}),Object(n.A)(),a.f("design:paramtypes",[p.a,d.c])],t)}(),k=function(t,e,i,n,r){return i?'<i class="fa fa-fire" aria-hidden="true"></i>':'<i class="fa fa-snowflake-o" aria-hidden="true"></i>'},S=function(){function t(){this.title="Example 2: Grid with Formatters",this.subTitle='\n    Grid with Custom and/or included Slickgrid Formatters (<a href="https://github.com/ghiscoding/Angular-Slickgrid/wiki/Formatters" target="_blank">Wiki docs</a>).\n    <ul>\n      <li>\n        Support Excel Copy Buffer (SlickGrid Copy Manager Plugin), you can use it by simply enabling "enableExcelCopyBuffer" flag.\n        Note that it will only evaluate Formatter when the "exportWithFormatter" flag is enabled (through "ExportOptions" or the column definition)\n      </li>\n    </ul>\n  '}return t.prototype.ngOnInit=function(){this.columnDefinitions=[{id:"title",name:"Title",field:"title",sortable:!0,type:l.f.string,width:70},{id:"phone",name:"Phone Number using mask",field:"phone",sortable:!0,type:l.f.number,minWidth:100,formatter:l.i.mask,params:{mask:"(000) 000-0000"}},{id:"duration",name:"Duration (days)",field:"duration",sortable:!0,type:l.f.number,minWidth:90},{id:"complete",name:"% Complete",field:"percentComplete",formatter:l.i.percentCompleteBar,type:l.f.number,sortable:!0,minWidth:100},{id:"percent2",name:"% Complete",field:"percentComplete2",formatter:l.i.progressBar,type:l.f.number,sortable:!0,minWidth:100},{id:"start",name:"Start",field:"start",formatter:l.i.dateIso,sortable:!0,type:l.f.date,minWidth:90,exportWithFormatter:!0},{id:"finish",name:"Finish",field:"finish",formatter:l.i.dateIso,sortable:!0,type:l.f.date,minWidth:90,exportWithFormatter:!0},{id:"effort-driven",name:"Effort Driven",field:"effortDriven",formatter:k,type:l.f.number,sortable:!0,minWidth:100}],this.gridOptions={autoResize:{containerId:"demo-container",sidePadding:15},enableAutoResize:!0,enableExcelCopyBuffer:!0},this.dataset=[];for(var t=0;t<500;t++){var e=2e3+Math.floor(10*Math.random()),i=Math.floor(11*Math.random()),n=Math.floor(29*Math.random()),r=Math.round(100*Math.random());this.dataset[t]={id:t,title:"Task "+t,phone:this.generatePhoneNumber(),duration:Math.round(100*Math.random())+"",percentComplete:r,percentComplete2:r,percentCompleteNumber:r,start:new Date(e,i,n),finish:new Date(e,i+1,n),effortDriven:t%5==0}}},t.prototype.generatePhoneNumber=function(){for(var t="",e=0;e<10;e++)t+=Math.round(9*Math.random())+"";return t},t=a.c([Object(n.n)({template:i("ehSh")})],t)}(),O=function(){function t(){this.title="Example 20: Pinned (frozen) Columns/Rows",this.subTitle='\n    This example demonstrates the use of Pinned (aka frozen) Columns and/or Rows<br/>\n    <ul>\n      <li>Option to pin any number of columns (left only) or rows</li>\n      <li>Option to pin the rows at the bottom instead of the top (default)</li>\n      <li>You can also dynamically any of these options, through SlickGrid "setOptions()"</li>\n      <li>Possibility to change the styling of the line border between pinned columns/rows</li>\n    </ul>\n  ',this.frozenColumnCount=2,this.frozenRowCount=3,this.isFrozenBottom=!1}return t.prototype.ngOnInit=function(){this.prepareDataGrid()},t.prototype.angularGridReady=function(t){this.angularGrid=t,this.gridObj=t.slickGrid},t.prototype.prepareDataGrid=function(){this.columnDefinitions=[{id:"sel",name:"#",field:"id",minWidth:40,width:40,maxWidth:40,cannotTriggerInsert:!0,resizable:!1,unselectable:!0},{id:"title",name:"Title",field:"title",minWidth:100,width:120,filterable:!0,sortable:!0},{id:"duration",name:"Duration",field:"duration",minWidth:100,width:120,filterable:!0,sortable:!0},{id:"percentComplete",name:"% Complete",field:"percentComplete",resizable:!1,minWidth:130,width:140,formatter:l.i.percentCompleteBar,type:l.f.number,filterable:!0,filter:{model:l.h.slider,operator:">="},sortable:!0},{id:"start",name:"Start",field:"start",minWidth:100,width:120,filterable:!0,sortable:!0},{id:"finish",name:"Finish",field:"finish",minWidth:100,width:120,filterable:!0,sortable:!0},{id:"effortDriven",name:"Effort Driven",field:"effortDriven",minWidth:100,width:120,formatter:l.i.checkmark,filterable:!0,filter:{collection:[{value:"",label:""},{value:!0,label:"True"},{value:!1,label:"False"}],model:l.h.singleSelect},sortable:!0},{id:"title1",name:"Title1",field:"title1",minWidth:100,width:120,filterable:!0,sortable:!0},{id:"title2",name:"Title2",field:"title2",minWidth:100,width:120,filterable:!0,sortable:!0},{id:"title3",name:"Title3",field:"title3",minWidth:100,width:120,filterable:!0,sortable:!0},{id:"title4",name:"Title4",field:"title4",minWidth:100,width:120,filterable:!0,sortable:!0}],this.gridOptions={enableAutoResize:!0,autoResize:{containerId:"demo-container",sidePadding:15},alwaysShowVerticalScroll:!1,enableCellNavigation:!0,enableFiltering:!0,asyncEditorLoading:!0,forceFitColumns:!1,autoEdit:!1,frozenColumn:this.frozenColumnCount,frozenRow:this.frozenRowCount,showHeaderRow:!0,syncColumnCellResize:!1},this.dataset=this.getData()},t.prototype.getData=function(){for(var t=[],e=0;e<500;e++)t[e]={id:e,title:"Task "+e,duration:Math.round(25*Math.random())+" days",percentComplete:Math.round(100*Math.random()),start:"01/01/2009",finish:"01/05/2009",effortDriven:e%5==0,title1:Math.round(25*Math.random()),title2:Math.round(25*Math.random()),title3:Math.round(25*Math.random()),title4:Math.round(25*Math.random())};return t},t.prototype.changeFrozenColumnCount=function(){this.gridObj&&this.gridObj.setOptions&&this.gridObj.setOptions({frozenColumn:this.frozenColumnCount})},t.prototype.changeFrozenRowCount=function(){this.gridObj&&this.gridObj.setOptions&&this.gridObj.setOptions({frozenRow:this.frozenRowCount})},t.prototype.toggleFrozenBottomRows=function(){this.gridObj&&this.gridObj.setOptions&&(this.gridObj.setOptions({frozenBottom:!this.isFrozenBottom}),this.isFrozenBottom=!this.isFrozenBottom)},t=a.c([Object(n.n)({template:i("kFfY"),encapsulation:n.mb.None,styles:[i("sx++")]})],t)}(),G=function(){function t(){this.title="Example 14: Grouping",this.subTitle='\n  (<a href="https://github.com/ghiscoding/Angular-Slickgrid/wiki/Grouping-&-Aggregators" target="_blank">Wiki docs</a>)\n  <ul>\n    <li>\n    Fully dynamic and interactive multi-level grouping with filtering and aggregates over 50\'000 items\n    </li>\n    <li>Each grouping level can have its own aggregates (over child rows, child groups, or all descendant rows)..</li>\n  </ul>\n  ',this.processing=!1}return t.prototype.ngOnDestroy=function(){this.exportBeforeSub.unsubscribe(),this.exportAfterSub.unsubscribe()},t.prototype.ngOnInit=function(){this.columnDefinitions=[{id:"sel",name:"#",field:"num",width:40,maxWidth:70,resizable:!0,filterable:!0,selectable:!1,focusable:!1},{id:"title",name:"Title",field:"title",width:50,minWidth:50,cssClass:"cell-title",filterable:!0,sortable:!0},{id:"duration",name:"Duration",field:"duration",minWidth:50,width:60,filterable:!0,filter:{model:l.h.slider,operator:">="},sortable:!0,type:l.f.number,groupTotalsFormatter:l.l.sumTotals,params:{groupFormatterPrefix:"Total: "}},{id:"%",name:"% Complete",field:"percentComplete",minWidth:70,width:90,formatter:l.i.percentCompleteBar,filterable:!0,filter:{model:l.h.compoundSlider},sortable:!0,groupTotalsFormatter:l.l.avgTotalsPercentage,params:{groupFormatterPrefix:"<i>Avg</i>: "}},{id:"start",name:"Start",field:"start",minWidth:60,filterable:!0,filter:{model:l.h.compoundDate},sortable:!0,type:l.f.dateIso,formatter:l.i.dateIso,exportWithFormatter:!0},{id:"finish",name:"Finish",field:"finish",minWidth:60,filterable:!0,filter:{model:l.h.compoundDate},sortable:!0,type:l.f.dateIso,formatter:l.i.dateIso,exportWithFormatter:!0},{id:"cost",name:"Cost",field:"cost",minWidth:70,width:100,filterable:!0,filter:{model:l.h.compoundInput},type:l.f.number,sortable:!0,exportWithFormatter:!0,formatter:l.i.dollar,groupTotalsFormatter:l.l.sumTotalsDollar,params:{groupFormatterPrefix:"<b>Total</b>: "}},{id:"effort-driven",name:"Effort Driven",minWidth:20,width:80,maxWidth:80,cssClass:"cell-effort-driven",field:"effortDriven",formatter:l.i.checkmark,sortable:!0,filterable:!0,filter:{collection:[{value:"",label:""},{value:!0,label:"True"},{value:!1,label:"False"}],model:l.h.singleSelect,filterOptions:{autoDropWidth:!0}}}],this.gridOptions={autoResize:{containerId:"demo-container",sidePadding:15},enableFiltering:!0,enableGrouping:!0,exportOptions:{sanitizeDataExport:!0}},this.loadData(500)},t.prototype.angularGridReady=function(t){var e=this;this.angularGrid=t,this.exportBeforeSub=this.angularGrid.exportService.onGridBeforeExportToFile.subscribe(function(){return e.processing=!0}),this.exportAfterSub=this.angularGrid.exportService.onGridAfterExportToFile.subscribe(function(){return e.processing=!1})},t.prototype.loadData=function(t){this.dataset=[];for(var e=0;e<t;e++){var i=2e3+Math.floor(10*Math.random()),n=Math.floor(11*Math.random()),r=Math.floor(29*Math.random()),a=Math.round(100*Math.random());this.dataset[e]={id:"id_"+e,num:e,title:"Task "+e,duration:Math.round(100*Math.random())+"",percentComplete:a,percentCompleteNumber:a,start:new Date(i,n,r),finish:new Date(i,n+1,r),cost:e%33==0?null:Math.round(1e4*Math.random())/100,effortDriven:e%5==0}}},t.prototype.gridReady=function(t){this.gridObj=t},t.prototype.dataviewReady=function(t){this.dataviewObj=t},t.prototype.clearGrouping=function(){this.dataviewObj.setGrouping([])},t.prototype.collapseAllGroups=function(){this.dataviewObj.collapseAllGroups()},t.prototype.expandAllGroups=function(){this.dataviewObj.expandAllGroups()},t.prototype.groupByDuration=function(){this.dataviewObj.setGrouping({getter:"duration",formatter:function(t){return"Duration:  "+t.value+' <span style="color:green">('+t.count+" items)</span>"},aggregators:[new l.a.Avg("percentComplete"),new l.a.Sum("cost")],comparer:function(t,e){return l.q.numeric(t.value,e.value,l.p.asc)},aggregateCollapsed:!1,lazyTotalsCalculation:!0})},t.prototype.groupByDurationOrderByCount=function(t){this.dataviewObj.setGrouping({getter:"duration",formatter:function(t){return"Duration:  "+t.value+' <span style="color:green">('+t.count+" items)</span>"},comparer:function(t,e){return t.count-e.count},aggregators:[new l.a.Avg("percentComplete"),new l.a.Sum("cost")],aggregateCollapsed:t,lazyTotalsCalculation:!0})},t.prototype.groupByDurationEffortDriven=function(){this.dataviewObj.setGrouping([{getter:"duration",formatter:function(t){return"Duration:  "+t.value+'  <span style="color:green">('+t.count+" items)</span>"},aggregators:[new l.a.Sum("duration"),new l.a.Sum("cost")],aggregateCollapsed:!0,lazyTotalsCalculation:!0},{getter:"effortDriven",formatter:function(t){return"Effort-Driven:  "+(t.value?"True":"False")+' <span style="color:green">('+t.count+" items)</span>"},aggregators:[new l.a.Avg("percentComplete"),new l.a.Sum("cost")],collapsed:!0,lazyTotalsCalculation:!0}])},t.prototype.groupByDurationEffortDrivenPercent=function(){this.dataviewObj.setGrouping([{getter:"duration",formatter:function(t){return"Duration:  "+t.value+'  <span style="color:green">('+t.count+" items)</span>"},aggregators:[new l.a.Sum("duration"),new l.a.Sum("cost")],aggregateCollapsed:!0,lazyTotalsCalculation:!0},{getter:"effortDriven",formatter:function(t){return"Effort-Driven:  "+(t.value?"True":"False")+'  <span style="color:green">('+t.count+" items)</span>"},aggregators:[new l.a.Sum("duration"),new l.a.Sum("cost")],lazyTotalsCalculation:!0},{getter:"percentComplete",formatter:function(t){return"% Complete:  "+t.value+'  <span style="color:green">('+t.count+" items)</span>"},aggregators:[new l.a.Avg("percentComplete")],aggregateCollapsed:!0,collapsed:!0,lazyTotalsCalculation:!0}])},t=a.c([Object(n.A)(),Object(n.n)({template:i("bRkm")}),a.f("design:paramtypes",[])],t)}(),T={},x=function(t,e,i,n,r){return T&&T[n.id]&&i<0?'<div style="color:red; font-weight:bold;">'+i+"</div>":i},A=function(){function t(){this.title="Example 7: Header Button Plugin",this.subTitle='\n    This example demonstrates using the <b>Slick.Plugins.HeaderButtons</b> plugin to easily add buttons to colum headers.\n    These buttons can be specified directly in the column definition, and are very easy to configure and use.\n    (<a href="https://github.com/ghiscoding/Angular-Slickgrid/wiki/Header-Menu-&-Header-Buttons" target="_blank">Wiki docs</a>)\n    <ul>\n      <li>Resize the 1st column to see all icon/command</li>\n      <li>Mouse hover the 2nd column to see it\'s icon/command</li>\n      <li>For all the other columns, click on top-right red circle icon to enable highlight of negative numbers.</li>\n    </ul>\n  '}return t.prototype.ngOnInit=function(){var t=this;this.columnDefinitions=[],this.gridOptions={enableAutoResize:!0,enableHeaderButton:!0,enableHeaderMenu:!1,autoResize:{containerId:"demo-container",sidePadding:15},enableFiltering:!1,enableCellNavigation:!0,headerButton:{onCommand:function(e,i){var n=i.column,r=i.button,a=i.command;T||(T={}),"toggle-highlight"===a&&("fa fa-circle red"===r.cssClass?(delete T[n.id],r.cssClass="fa fa-circle-o red faded",r.tooltip="Highlight negative numbers."):(T[n.id]=!0,r.cssClass="fa fa-circle red",r.tooltip="Remove highlight."),t.gridObj.invalidate())}}},this.getData()},t.prototype.ngOnDestroy=function(){T=null},t.prototype.getData=function(){for(var t=0;t<9;t++)this.columnDefinitions.push({id:t,name:"Column"+(t+1),field:t+"",width:100,sortable:!0,formatter:x,header:{buttons:[{cssClass:"fa fa-circle-o red faded",command:"toggle-highlight",tooltip:"Highlight negative numbers."}]}});this.columnDefinitions[0].name="Resize me!",this.columnDefinitions[0].header={buttons:[{cssClass:"fa fa-tag",handler:function(t){alert("Tag")}},{cssClass:"fa fa-comment",handler:function(t){alert("Comment")}},{cssClass:"fa fa-info-circle",handler:function(t){alert("Info")}},{cssClass:"fa fa-question-circle",handler:function(t){alert("Help")}}]},this.columnDefinitions[1].name="Hover me!",this.columnDefinitions[1].header={buttons:[{cssClass:"fa fa-question-circle",showOnHover:!0,tooltip:"This button only appears on hover.",handler:function(t){alert("Help")}}]};var e=[];for(t=0;t<100;t++){var i=e[t]={};i.id=t;for(var n=0;n<this.columnDefinitions.length;n++)i[n]=Math.round(10*Math.random())-5}this.dataset=e},t.prototype.gridReady=function(t){this.gridObj=t},t.prototype.dataviewReady=function(t){this.dataviewObj=t},t=a.c([Object(n.n)({template:i("nUzR")})],t)}(),F=function(){function t(){this.title="Example 8: Header Menu Plugin",this.subTitle='\n    This example demonstrates using the <b>Slick.Plugins.HeaderMenu</b> plugin to easily add menus to colum headers.<br/>\n    These menus can be specified directly in the column definition, and are very easy to configure and use.\n    (<a href="https://github.com/ghiscoding/Angular-Slickgrid/wiki/Header-Menu-&-Header-Buttons" target="_blank">Wiki docs</a>)\n    <ul>\n      <li>Now enabled by default in the Global Grid Options, it will add the default commands of (hide column, sort asc/desc)</li>\n      <li>Hover over any column header to see an arrow showing up on the right</li>\n      <li>Try Sorting (multi-sort) the 2 columns "Duration" and "% Complete" (the other ones are disabled)</li>\n      <li>Try hiding any columns (you use the "Column Picker" plugin by doing a right+click on the header to show the column back)</li>\n    </ul>\n  '}return t.prototype.ngOnInit=function(){var t=this;this.columnDefinitions=[{id:"title",name:"Title",field:"title"},{id:"duration",name:"Duration",field:"duration",sortable:!0},{id:"%",name:"% Complete",field:"percentComplete",sortable:!0},{id:"start",name:"Start",field:"start"},{id:"finish",name:"Finish",field:"finish"},{id:"effort-driven",name:"Effort Driven",field:"effortDriven"}],this.columnDefinitions.forEach(function(t){t.header={menu:{items:[{iconCssClass:"fa fa-sort-asc",title:"Sort Ascending",disabled:!t.sortable,command:"sort-asc"},{iconCssClass:"fa fa-sort-desc",title:"Sort Descending",disabled:!t.sortable,command:"sort-desc"},{iconCssClass:"fa fa-times",title:"Hide Column",command:"hide"},{iconCssClass:"fa fa-question-circle",title:"Help",command:"help"}]}}}),this.gridOptions={enableAutoResize:!0,enableHeaderMenu:!0,autoResize:{containerId:"demo-container",sidePadding:15},enableFiltering:!1,enableCellNavigation:!0,headerMenu:{onCommand:function(e,i){if("hide"===i.command)t.angularGrid.pluginService.hideColumn(i.column),t.angularGrid.pluginService.autoResizeColumns();else if("sort-asc"===i.command||"sort-desc"===i.command){var n=t.angularGrid.sortService.getPreviousColumnSorts(i.column.id+"");n.push({sortCol:i.column,sortAsc:"sort-asc"===i.command}),t.angularGrid.sortService.onLocalSortChanged(t.gridObj,t.dataviewObj,n);var r=n.map(function(t){return{columnId:t.sortCol.id,sortAsc:t.sortAsc}});t.gridObj.setSortColumns(r)}else alert("Command: "+i.command)}}},this.getData()},t.prototype.getData=function(){for(var t=[],e=0;e<500;e++)t[e]={id:e,title:"Task "+e,duration:Math.round(25*Math.random())+" days",percentComplete:Math.round(100*Math.random()),start:"01/01/2009",finish:"01/05/2009",effortDriven:e%5==0};this.dataset=t},t.prototype.angularGridReady=function(t){this.angularGrid=t},t.prototype.gridReady=function(t){this.gridObj=t},t.prototype.dataviewReady=function(t){this.dataviewObj=t},t=a.c([Object(n.n)({template:i("L9S4")})],t)}(),R=function(){function t(t){var e=this;this.translate=t,this.title="Example 12: Localization (i18n)",this.subTitle='Support multiple locales with the ngx-translate plugin, following these steps (<a href="https://github.com/ghiscoding/Angular-Slickgrid/wiki/Localization" target="_blank">Wiki docs</a>)\n  <ol class="small">\n    <li>You first need to "enableTranslate" in the Grid Options</li>\n    <li>In the Column Definitions, you have following options</li>\n    <ul>\n      <li>To translate a header title, use "headerKey" with a translate key (headerKey: \'TITLE\')</li>\n      <li>For the cell values, you need to use a Formatter, there\'s 2 ways of doing it</li>\n      <ul>\n        <li>formatter: myCustomTranslateFormatter <b>&lt;= "Title" column uses it</b></li>\n        <li>formatter: Formatters.translate, i18n: this.translateService <b>&lt;= "Completed" column uses it</b></li>\n      </ul>\n    </ul>\n    <li>For date localization, you need to create your own custom formatter. </li>\n    <ul>\n      <li>You can easily implement logic to switch between Formatters "dateIso" or "dateUs", depending on current locale.</li>\n    </ul>\n    <li>For the Select (dropdown) filter, you can fill in the "labelKey" property, if found it will use it, else it will use "label"</li>\n      <ul>\n        <li>What if your select options have totally different value/label pair? In this case, you can use the <b>customStructure: { label: \'customLabel\', value: \'customValue\'}</b> to change the property name(s) to use.\'</li>\n        <li>What if you want to use "customStructure" and translation? Simply pass this flag <b>enableTranslateLabel: true</b></li>\n        <li>More info on the Select Filter <a href="https://github.com/ghiscoding/Angular-Slickgrid/wiki/Select-Filter" target="_blank">Wiki page</a>\n      </ul>\n    <li>For more info about "Download to File", read the <a href="https://github.com/ghiscoding/Angular-Slickgrid/wiki/Export-to-File" target="_blank">Wiki page</a></li>\n    </ol>\n  ',this.duplicateTitleHeaderCount=1,this.taskTranslateFormatter=function(t,i,n,r,a){return e.translate.instant("TASK_X",{x:n})},this.selectedLanguage=this.translate.getDefaultLang()}return t.prototype.ngOnInit=function(){this.columnDefinitions=[{id:"title",name:"Title",field:"id",headerKey:"TITLE",formatter:this.taskTranslateFormatter,sortable:!0,minWidth:100,filterable:!0,params:{useFormatterOuputToFilter:!0}},{id:"description",name:"Description",field:"description",filterable:!0,sortable:!0,minWidth:80},{id:"duration",name:"Duration (days)",field:"duration",headerKey:"DURATION",sortable:!0,formatter:l.i.percentCompleteBar,minWidth:100,filterable:!0,filter:{model:l.h.slider,params:{hideSliderNumber:!0}}},{id:"start",name:"Start",field:"start",headerKey:"START",formatter:l.i.dateIso,outputType:l.f.dateIso,type:l.f.date,minWidth:100,filterable:!0,filter:{model:l.h.compoundDate}},{id:"finish",name:"Finish",field:"finish",headerKey:"FINISH",formatter:l.i.dateIso,outputType:l.f.dateIso,type:l.f.date,minWidth:100,filterable:!0,filter:{model:l.h.compoundDate}},{id:"completedBool",name:"Completed",field:"completedBool",headerKey:"COMPLETED",minWidth:100,sortable:!0,formatter:l.i.checkmark,exportCustomFormatter:l.i.translateBoolean,filterable:!0,filter:{collection:[{value:"",label:""},{value:!0,labelKey:"TRUE"},{value:!1,labelKey:"FALSE"}],model:l.h.singleSelect,enableTranslateLabel:!0,filterOptions:{autoDropWidth:!0}}},{id:"completed",name:"Completed",field:"completed",headerKey:"COMPLETED",formatter:l.i.translate,sortable:!0,minWidth:100,exportWithFormatter:!0,filterable:!0,filter:{collection:[{value:"",label:""},{value:"TRUE",labelKey:"TRUE"},{value:"FALSE",labelKey:"FALSE"}],collectionSortBy:{property:"labelKey"},enableTranslateLabel:!0,model:l.h.singleSelect,filterOptions:{autoDropWidth:!0}}}],this.gridOptions={autoResize:{containerId:"demo-container",sidePadding:15},enableAutoResize:!0,enableExcelCopyBuffer:!0,enableFiltering:!0,enableTranslate:!0,i18n:this.translate,exportOptions:{exportWithFormatter:!0,sanitizeDataExport:!0},gridMenu:{hideExportCsvCommand:!1,hideExportTextDelimitedCommand:!1}},this.loadData()},t.prototype.loadData=function(){this.dataset=[];for(var t=0;t<1e3;t++){var e=2e3+Math.floor(30*Math.random()),i=Math.floor(11*Math.random()),n=Math.floor(29*Math.random());this.dataset[t]={id:t,description:t%5?"desc "+t:"\ud83d\ude80\ud83e\udd84 espa\xf1ol",duration:Math.round(100*Math.random())+"",start:new Date(e,i,n),finish:new Date(e,i+1,n),completedBool:t%5==0,completed:t%5==0?"TRUE":"FALSE"}}},t.prototype.angularGridReady=function(t){this.angularGrid=t},t.prototype.dynamicallyAddTitleHeader=function(){var t={id:"title"+this.duplicateTitleHeaderCount++,field:"id",headerKey:"TITLE",formatter:this.taskTranslateFormatter,sortable:!0,minWidth:100,filterable:!0,params:{useFormatterOuputToFilter:!0}};this.columnDefinitions.push(t),this.columnDefinitions=this.columnDefinitions.slice()},t.prototype.exportToFile=function(t){void 0===t&&(t="csv"),this.angularGrid.exportService.exportToFile({delimiter:"csv"===t?l.d.comma:l.d.tab,filename:"myExport",format:"csv"===t?l.g.csv:l.g.txt})},t.prototype.switchLanguage=function(){this.selectedLanguage="en"===this.selectedLanguage?"fr":"en",this.translate.use(this.selectedLanguage)},t=a.c([Object(n.n)({template:i("HOIw")}),Object(n.A)(),a.f("design:paramtypes",[d.c])],t)}(),I=function(){function t(t){this.http=t,this.title="Example 5: Grid connected to Backend Server with OData",this.subTitle='\n    Sorting/Paging connected to a Backend OData Service (<a href="https://github.com/ghiscoding/Angular-Slickgrid/wiki/OData" target="_blank">Wiki docs</a>).\n    <br/>\n    <ul class="small">\n      <li>Only "Name" field is sortable for the demo (because we use JSON files), however "multiColumnSort: true" is also supported</li>\n      <li>String column also support operator (>, >=, <, <=, <>, !=, =, ==, *)\n      <ul>\n        <li>The (*) can be used as startsWith (ex.: "abc*" => startsWith "abc") / endsWith (ex.: "*xyz" => endsWith "xyz")</li>\n        <li>The other operators can be used on column type number for example: ">=100" (bigger or equal than 100)</li>\n      </ul>\n      <li>OData Service could be replaced by other Service type in the future (GraphQL or whichever you provide)</li>\n      <li>You can also preload a grid with certain "presets" like Filters / Sorters / Pagination <a href="https://github.com/ghiscoding/Angular-Slickgrid/wiki/Grid-State-&-Preset" target="_blank">Wiki - Grid Preset</a>\n    </ul>\n  ',this.dataset=[],this.odataQuery="",this.processing=!0,this.status={text:"processing...",class:"alert alert-danger"}}return t.prototype.ngOnInit=function(){var t=this;this.columnDefinitions=[{id:"name",name:"Name",field:"name",sortable:!0,type:l.f.string,filterable:!0,filter:{model:l.h.compoundInput}},{id:"gender",name:"Gender",field:"gender",filterable:!0,sortable:!0,filter:{model:l.h.singleSelect,collection:[{value:"",label:""},{value:"male",label:"male"},{value:"female",label:"female"}]}},{id:"company",name:"Company",field:"company"}],this.gridOptions={enableAutoResize:!0,autoResize:{containerId:"demo-container",sidePadding:15},checkboxSelector:{hideInFilterHeaderRow:!1,hideInColumnTitleRow:!0},enableCellNavigation:!0,enableFiltering:!0,enableCheckboxSelector:!0,enableRowSelection:!0,pagination:{pageSizes:[10,15,20,25,30,40,50,75,100],pageSize:20,totalItems:0},backendServiceApi:{service:new l.k,preProcess:function(){return t.displaySpinner(!0)},process:function(e){return t.getCustomerApiCall(e)},postProcess:function(e){t.statistics=e.statistics,t.displaySpinner(!1),t.getCustomerCallback(e)}}}},t.prototype.displaySpinner=function(t){this.processing=t,this.status=t?{text:"processing...",class:"alert alert-danger"}:{text:"done",class:"alert alert-success"}},t.prototype.getCustomerCallback=function(t){this.gridOptions.pagination.totalItems=t.totalRecordCount,this.statistics&&(this.statistics.totalItemCount=t.totalRecordCount),this.gridOptions=Object.assign({},this.gridOptions),this.dataset=t.items,this.odataQuery=t.query},t.prototype.getCustomerApiCall=function(t){return this.getCustomerDataApiMock(t)},t.prototype.getCustomerDataApiMock=function(t){var e=this;return new Promise(function(i,n){for(var r,a=t.toLowerCase().split("&"),o=0,l="",s=100,d={},c=0,u=a;c<u.length;c++){var p=u[c];if(p.includes("$top=")&&(r=+p.substring("$top=".length)),p.includes("$skip=")&&(o=+p.substring("$skip=".length)),p.includes("$orderby=")&&(l=p.substring("$orderby=".length)),p.includes("$filter=")){var g=p.substring("$filter=".length).replace("%20"," ");if(g.includes("substringof")){var h=(m=g.match(/substringof\('(.*?)',([a-zA-Z ]*)/))[2].trim();d[h]={type:"substring",term:m[1].trim()}}if(g.includes("eq")){h=(m=g.match(/([a-zA-Z ]*) eq '(.*?)'/))[1].trim();d[h]={type:"equal",term:m[2].trim()}}if(g.includes("startswith")){h=(m=g.match(/startswith\(([a-zA-Z ]*),\s?'(.*?)'/))[1].trim();d[h]={type:"starts",term:m[2].trim()}}if(g.includes("endswith")){var m;h=(m=g.match(/endswith\(([a-zA-Z ]*),\s?'(.*?)'/))[1].trim();d[h]={type:"ends",term:m[2].trim()}}}}var f;switch(l.includes("asc")?"ASC":l.includes("desc")?"DESC":""){case"ASC":f="assets/data/customers_100_ASC.json";break;case"DESC":f="assets/data/customers_100_DESC.json";break;default:f="assets/data/customers_100.json"}e.http.get(f).subscribe(function(e){var n=o,a=e;if(d){var l=function(t){d.hasOwnProperty(t)&&(a=a.filter(function(e){var i=d[t].type,n=d[t].term,r=t;if(t&&-1!==t.indexOf(" ")){var a=t.split(" ");r=a[a.length-1]}var o=e[r];if(o)switch(i){case"equal":return o.toLowerCase()===n;case"ends":return o.toLowerCase().endsWith(n);case"starts":return o.toLowerCase().startsWith(n);case"substring":return o.toLowerCase().includes(n)}}))};for(var c in d)l(c);s=a.length}var u=a.slice(n,n+r);setTimeout(function(){i({items:u,totalRecordCount:s,query:t})},500)})})},t=a.c([Object(n.n)({template:i("dFQ2")}),Object(n.A)(),a.f("design:paramtypes",[p.a])],t)}(),M=function(){function t(t){this.translate=t,this.title="Example 6: Grid connected to Backend Server with GraphQL",this.subTitle='\n    Sorting/Paging connected to a Backend GraphQL Service (<a href="https://github.com/ghiscoding/Angular-Slickgrid/wiki/GraphQL" target="_blank">Wiki docs</a>).\n    <br/>\n    <ul class="small">\n      <li><span class="red">(*) NO DATA SHOWING</span> - just change Filters &amp; Pages and look at the "GraphQL Query" changing :)</li>\n      <li>Only "Name" field is sortable for the demo (because we use JSON files), however "multiColumnSort: true" is also supported</li>\n      <li>String column also support operator (>, >=, <, <=, <>, !=, =, ==, *)\n      <ul>\n        <li>The (*) can be used as startsWith (ex.: "abc*" => startsWith "abc") / endsWith (ex.: "*xyz" => endsWith "xyz")</li>\n        <li>The other operators can be used on column type number for example: ">=100" (bigger or equal than 100)</li>\n      </ul>\n      <li>You can also preload a grid with certain "presets" like Filters / Sorters / Pagination <a href="https://github.com/ghiscoding/Angular-Slickgrid/wiki/Grid-State-&-Preset" target="_blank">Wiki - Grid Preset</a>\n    </ul>\n  ',this.dataset=[],this.graphqlQuery="",this.processing=!0,this.status={text:"processing...",class:"alert alert-danger"},this.isWithCursor=!1,this.selectedLanguage=this.translate.getDefaultLang()}return t.prototype.ngOnDestroy=function(){this.gridStateSub.unsubscribe()},t.prototype.ngOnInit=function(){var t=this;this.columnDefinitions=[{id:"name",field:"name",headerKey:"NAME",filterable:!0,sortable:!0,type:l.f.string,width:60},{id:"gender",field:"gender",headerKey:"GENDER",filterable:!0,sortable:!0,width:60,filter:{model:l.h.singleSelect,collection:[{value:"",label:""},{value:"male",label:"male",labelKey:"MALE"},{value:"female",label:"female",labelKey:"FEMALE"}]}},{id:"company",field:"company",headerKey:"COMPANY",width:60,sortable:!0,filterable:!0,filter:{model:l.h.multipleSelect,collection:[{value:"acme",label:"Acme"},{value:"abc",label:"Company ABC"},{value:"xyz",label:"Company XYZ"}]}},{id:"billing.address.street",field:"billing.address.street",headerKey:"BILLING.ADDRESS.STREET",width:60,filterable:!0,sortable:!0},{id:"billing.address.zip",field:"billing.address.zip",headerKey:"BILLING.ADDRESS.ZIP",width:60,type:l.f.number,filterable:!0,sortable:!0,filter:{model:l.h.compoundInput},formatter:l.i.multiple,params:{formatters:[l.i.complexObject,l.i.translate]}}],this.gridOptions={enableAutoResize:!1,enableFiltering:!0,enableCellNavigation:!0,enableCheckboxSelector:!0,enableRowSelection:!0,enableTranslate:!0,i18n:this.translate,gridMenu:{resizeOnShowHeaderRow:!0},pagination:{pageSizes:[10,15,20,25,30,40,50,75,100],pageSize:20,totalItems:0},presets:{filters:[{columnId:"gender",searchTerms:["male"],operator:l.n.equal},{columnId:"name",searchTerms:["John Doe"],operator:l.n.contains},{columnId:"company",searchTerms:["xyz"],operator:"IN"}],sorters:[{columnId:"name",direction:"asc"},{columnId:"company",direction:l.o.DESC}],pagination:{pageNumber:2,pageSize:20}},backendServiceApi:{service:new l.j,options:this.getBackendOptions(this.isWithCursor),preProcess:function(){return t.displaySpinner(!0)},process:function(e){return t.getCustomerApiCall(e)},postProcess:function(e){t.statistics=e.statistics,t.displaySpinner(!1)}}}},t.prototype.angularGridReady=function(t){this.angularGrid=t,this.gridStateSub=this.angularGrid.gridStateService.onGridStateChanged.subscribe(function(t){return console.log(t)})},t.prototype.displaySpinner=function(t){this.processing=t,this.status=t?{text:"processing...",class:"alert alert-danger"}:{text:"done",class:"alert alert-success"}},t.prototype.getBackendOptions=function(t){return{columnDefinitions:this.columnDefinitions,datasetName:"users",isWithCursor:t,addLocaleIntoQuery:!0,extraQueryArguments:[{field:"userId",value:123}],keepArgumentFieldDoubleQuotes:!0}},t.prototype.getCustomerApiCall=function(t){var e,i=this,n={data:(e={},e.users={nodes:[],pageInfo:{hasNextPage:!0},totalCount:100},e),timestamps:{startTime:new Date,endTime:new Date,executionTime:150}};return new Promise(function(t,e){setTimeout(function(){i.graphqlQuery=i.angularGrid.backendService.buildQuery(),t(n)},500)})},t.prototype.saveCurrentGridState=function(t){console.log("GraphQL current grid state",this.angularGrid.gridStateService.getCurrentGridState())},t.prototype.switchLanguage=function(){this.selectedLanguage="en"===this.selectedLanguage?"fr":"en",this.translate.use(this.selectedLanguage)},t=a.c([Object(n.n)({template:i("lu7S")}),Object(n.A)(),a.f("design:paramtypes",[d.c])],t)}(),j=(i("4Y23"),i("MLAY"),function(t,e,i,n,r){return r&&r.brand&&r.brand.name||""}),E=function(t,e,i,n,r){var a="";return r&&r.octopart_url&&r.mpn&&(a='<a href="'+r.octopart_url+'" target="_blank">'+r.mpn+"</a>"),a},L=function(){function t(){this._eventHandler=new Slick.EventHandler,this.title="Example 18: Octopart Catalog Search - Remote Model Plugin",this.subTitle='\n    This example demonstrates how to use "slick.remotemodel.js" or any Remote implementation through an external Remote Service\n    <ul>\n      <li>\n        Your browser (Chrome) might block access to the Octopart query, if you get "block content" then just unblock it \n        or try with different browser like Firefox or Edge\n      </li>\n      <li>If the demo throws some errors, try again later (there\'s a limit per day).</li>\n      <li>\n        Uses <a href="https://github.com/6pac/SlickGrid/blob/master/slick.remotemodel.js" target="_blank">slick.remotemodel.js</a>\n        which is hooked up to load search results from Octopart, but can easily be extended\n        to support any JSONP-compatible backend that accepts paging parameters.\n      </li>\n      <li>\n        This demo implements a custom DataView, however please note that you are on your own to implement all necessary DataView methods\n        for Sorting, Filtering, etc...\n      </li>\n      <li>\n      Soure code for this example is available <a href="https://github.com/ghiscoding/Angular-Slickgrid/blob/master/src/app/examples/grid-remote.component.ts" target="_blank">here</a>\n      </li>\n    </ul>\n  ',this.dataset=[],this.loading=!1,this.search="switch",this.loaderDataView=new Slick.Data.RemoteModel,this.customDataView=this.loaderDataView&&this.loaderDataView.data}return t.prototype.angularGridReady=function(t){this.angularGrid=t,this.gridObj=t.slickGrid,this.loaderDataView.setSort("score",-1),this.gridObj.setSortColumn("score",!1),this.gridObj.onViewportChanged.notify()},t.prototype.ngOnDestroy=function(){this._eventHandler.unsubscribeAll()},t.prototype.ngOnInit=function(){this.defineGrid(),this.hookAllLoaderEvents(),this.loaderDataView.setSearch(this.search)},t.prototype.defineGrid=function(){this.columnDefinitions=[{id:"mpn",name:"MPN",field:"mpn",formatter:E,width:100,sortable:!0},{id:"brand",name:"Brand",field:"brand.name",formatter:j,width:100,sortable:!0},{id:"short_description",name:"Description",field:"short_description",width:520}],this.gridOptions={enableAutoResize:!0,autoResize:{containerId:"demo-container",sidePadding:15},enableCellNavigation:!0,enableColumnReorder:!1,enableGridMenu:!1,multiColumnSort:!1}},t.prototype.hookAllLoaderEvents=function(){var t=this;this._eventHandler&&this._eventHandler.subscribe&&this.loaderDataView&&this.loaderDataView.onDataLoading&&this.loaderDataView.onDataLoaded&&(this._eventHandler.subscribe(this.loaderDataView.onDataLoading,function(e,i){t.loading=!0}),this._eventHandler.subscribe(this.loaderDataView.onDataLoaded,function(e,i){if(i&&t.gridObj&&t.gridObj.invalidateRow&&t.gridObj.updateRowCount&&t.gridObj.render){for(var n=i.from;n<=i.to;n++)t.gridObj.invalidateRow(n);t.gridObj.updateRowCount(),t.gridObj.render(),t.loading=!1}}))},t.prototype.onSort=function(t,e){if(this.gridObj&&this.gridObj.getViewport&&this.loaderDataView&&this.loaderDataView.ensureData&&this.loaderDataView.setSort){var i=this.gridObj.getViewport();e&&e.sortCol&&e.sortCol.field&&this.loaderDataView.setSort(e.sortCol.field,e.sortAsc?1:-1),this.loaderDataView.ensureData(i.top,i.bottom)}},t.prototype.onViewportChanged=function(t,e){if(this.gridObj&&this.gridObj.getViewport&&this.loaderDataView&&this.loaderDataView.ensureData){var i=this.gridObj.getViewport();this.loaderDataView.ensureData(i.top,i.bottom)}},t.prototype.searchChanged=function(t){if(t&&this.gridObj&&this.gridObj.getViewport&&this.loaderDataView&&this.loaderDataView.ensureData&&this.loaderDataView.setSearch){var e=this.gridObj.getViewport();this.loaderDataView.setSearch(t),this.loaderDataView.ensureData(e.top,e.bottom)}},t=a.c([Object(n.n)({template:i("7xm8")}),a.f("design:paramtypes",[])],t)}(),P=function(){function t(t){this.translate=t,this.title="Example 17: Row Move Plugin",this.subTitle="This example demonstrates using the <b>Slick.Plugins.RowMoveManager</b> plugin to easily move a row in the grid.<br/>\n    <ul>\n      <li>Click to select, Ctrl+Click to toggle selection, Shift+Click to select a range.</li>\n      <li>Drag one or more rows by the handle (icon) to reorder</li>\n    </ul>\n  ",this.selectedLanguage=this.translate.getDefaultLang()}return t.prototype.angularGridReady=function(t){this.angularGrid=t},t.prototype.ngOnInit=function(){var t=this;this.columnDefinitions=[{id:"#",field:"",name:"",width:40,behavior:"selectAndMove",selectable:!1,resizable:!1,cssClass:"cell-reorder dnd",excludeFromExport:!0},{id:"title",name:"Title",field:"title"},{id:"duration",name:"Duration",field:"duration",sortable:!0},{id:"%",name:"% Complete",field:"percentComplete",sortable:!0},{id:"start",name:"Start",field:"start"},{id:"finish",name:"Finish",field:"finish"},{id:"effort-driven",name:"Completed",field:"effortDriven",formatter:l.i.checkmark}],this.gridOptions={autoResize:{containerId:"demo-container",sidePadding:15},enableCellNavigation:!0,enableRowMoveManager:!0,gridMenu:{iconCssClass:"fa fa-ellipsis-v"},rowMoveManager:{onBeforeMoveRows:function(e,i){return t.onBeforeMoveRow(e,i)},onMoveRows:function(e,i){return t.onMoveRows(e,i)}},enableTranslate:!0,i18n:this.translate},this.getData()},t.prototype.getData=function(){for(var t=[],e=0;e<500;e++)t[e]={id:e,title:"Task "+e,duration:Math.round(25*Math.random())+" days",percentComplete:Math.round(100*Math.random()),start:"01/01/2009",finish:"01/05/2009",effortDriven:e%5==0};this.dataset=t},t.prototype.onBeforeMoveRow=function(t,e){for(var i=0;i<e.rows.length;i++)if(e.rows[i]===e.insertBefore||e.rows[i]===e.insertBefore-1)return t.stopPropagation(),!1;return!0},t.prototype.onMoveRows=function(t,e){var i,n,r=[],a=e.rows,o=e.insertBefore;i=this.dataset.slice(0,o),n=this.dataset.slice(o,this.dataset.length),a.sort(function(t,e){return t-e});for(var l=0;l<a.length;l++)r.push(this.dataset[a[l]]);a.reverse();for(l=0;l<a.length;l++){var s=a[l];s<o?i.splice(s,1):n.splice(s-o,1)}this.dataset=i.concat(r.concat(n));var d=[];for(l=0;l<a.length;l++)d.push(i.length+l);this.angularGrid.slickGrid.resetActiveCell(),this.angularGrid.slickGrid.setData(this.dataset),this.angularGrid.slickGrid.setSelectedRows(d),this.angularGrid.slickGrid.render()},t=a.c([Object(n.n)({template:i("B3Kb")}),a.f("design:paramtypes",[d.c])],t)}(),W=function(){function t(){this.title="Example 10: Multiple Grids with Row Selection",this.subTitle='\n    Row selection, single or multi-select (<a href="https://github.com/ghiscoding/Angular-Slickgrid/wiki/Row-Selection" target="_blank">Wiki docs</a>).\n    <ul>\n      <li>Single Select, you can click on any cell to make the row active</li>\n      <li>Multiple Selections, you need to specifically click on the checkbox to make 1 or more selections</li>\n      <li>Note that "enableExcelCopyBuffer" cannot be used at the same time as Row Selection because there can exist only 1 SelectionModel at a time</li>\n    </ul>\n  '}return t.prototype.ngOnInit=function(){this.prepareGrid()},t.prototype.angularGridReady1=function(t){this.angularGrid1=t,this.gridObj1=t&&t.slickGrid||{}},t.prototype.angularGridReady2=function(t){this.angularGrid2=t,this.gridObj2=t&&t.slickGrid||{}},t.prototype.prepareGrid=function(){this.columnDefinitions1=[{id:"title",name:"Title",field:"title",sortable:!0,type:l.f.string,editor:{model:l.e.longText}},{id:"duration",name:"Duration (days)",field:"duration",sortable:!0,type:l.f.number,editor:{model:l.e.integer}},{id:"complete",name:"% Complete",field:"percentComplete",formatter:l.i.percentCompleteBar,type:l.f.number,sortable:!0},{id:"start",name:"Start",field:"start",formatter:l.i.dateIso,sortable:!0,type:l.f.dateIso,editor:{model:l.e.date}},{id:"finish",name:"Finish",field:"finish",formatter:l.i.dateIso,sortable:!0,type:l.f.date,editor:{model:l.e.date},exportWithFormatter:!0},{id:"effort-driven",name:"Effort Driven",field:"effortDriven",formatter:l.i.checkmark,type:l.f.number,sortable:!0}],this.columnDefinitions2=[{id:"title",name:"Title",field:"title",sortable:!0,type:l.f.string,filterable:!0},{id:"duration",name:"Duration (days)",field:"duration",sortable:!0,type:l.f.number,filterable:!0},{id:"complete",name:"% Complete",field:"percentComplete",formatter:l.i.percentCompleteBar,type:l.f.number,filterable:!0,sortable:!0},{id:"start",name:"Start",field:"start",filterable:!0,sortable:!0,formatter:l.i.dateIso,exportWithFormatter:!0,type:l.f.date,filter:{model:l.h.compoundDate}},{id:"finish",name:"Finish",field:"finish",filterable:!0,sortable:!0,formatter:l.i.dateIso,exportWithFormatter:!0,type:l.f.date,filter:{model:l.h.compoundDate}},{id:"effort-driven",name:"Effort Driven",field:"effortDriven",formatter:l.i.checkmark,type:l.f.boolean,sortable:!0,filterable:!0,filter:{collection:[{value:"",label:""},{value:!0,label:"true"},{value:!1,label:"false"}],model:l.h.singleSelect}}],this.gridOptions1={editable:!0,autoEdit:!1,enableAutoResize:!1,enableCellNavigation:!0,enableFiltering:!1,enableCheckboxSelector:!0,enableRowSelection:!0,checkboxSelector:{hideSelectAllCheckbox:!0},rowSelectionOptions:{selectActiveRow:!0}},this.gridOptions2={enableAutoResize:!1,enableCellNavigation:!0,enableFiltering:!0,checkboxSelector:{hideInFilterHeaderRow:!1,hideInColumnTitleRow:!0},rowSelectionOptions:{selectActiveRow:!1},preselectedRows:[0,2],enableCheckboxSelector:!0,enableRowSelection:!0},this.dataset1=this.prepareData(),this.dataset2=this.prepareData()},t.prototype.prepareData=function(){for(var t=[],e=0;e<500;e++){var i=2e3+Math.floor(10*Math.random()),n=Math.floor(11*Math.random()),r=Math.floor(29*Math.random()),a=Math.round(100*Math.random());t[e]={id:e,title:"Task "+e,duration:Math.round(100*Math.random())+"",percentComplete:a,percentCompleteNumber:a,start:new Date(i,n,r),finish:new Date(i,n+1,r),effortDriven:e%5==0}}return t},t.prototype.handleSelectedRowsChanged1=function(t,e){var i=this;Array.isArray(e.rows)&&(this.selectedTitle=e.rows.map(function(t){return i.gridObj1.getDataItem(t).title||""}))},t.prototype.handleSelectedRowsChanged2=function(t,e){var i=this;Array.isArray(e.rows)&&(this.selectedTitles=e.rows.map(function(t){return i.gridObj2.getDataItem(t).title||""}))},t=a.c([Object(n.n)({template:i("hpZS")}),Object(n.A)()],t)}();function N(t,e){return Math.floor(Math.random()*(e-t+1)+t)}var B,H=function(){function t(t){this.translate=t,this.title="Example 16: Grid State & Presets using Local Storage",this.subTitle='\n    Grid State & Preset (<a href="https://github.com/ghiscoding/aurelia-slickgrid/wiki/Grid-State-&-Preset" target="_blank">Wiki docs</a>)\n    <br/>\n    <ul class="small">\n      <li>Uses Local Storage to persist the Grid State and uses Grid Options "presets" to put the grid back to it\'s previous state</li>\n      <ul>\n        <li>to demo this, simply change any columns (position reorder, visibility, size, filter, sort), then refresh your browser with (F5)</li>\n      </ul>\n      <li>Local Storage is just one option, you can use whichever is more convenient for you (Local Storage, Session Storage, DB, ...)</li>\n    </ul>\n  ',this.selectedLanguage=this.translate.getDefaultLang()}return t.prototype.angularGridReady=function(t){this.angularGrid=t},t.prototype.ngOnInit=function(){var t=JSON.parse(localStorage.gridState||null);this.defineGrid(t)},t.prototype.clearGridStateFromLocalStorage=function(){localStorage.gridState=null,this.angularGrid.gridService.resetGrid(this.columnDefinitions)},t.prototype.defineGrid=function(t){for(var e=[],i=0;i<500;i++)e.push({value:i,label:i});this.columnDefinitions=[{id:"title",name:"Title",field:"title",headerKey:"TITLE",filterable:!0,sortable:!0,type:l.f.string,minWidth:45,width:100,filter:{model:l.h.compoundInput}},{id:"description",name:"Description",field:"description",filterable:!0,sortable:!0,minWidth:80,width:100,type:l.f.string,filter:{model:l.h.input}},{id:"duration",name:"Duration (days)",field:"duration",sortable:!0,type:l.f.number,exportCsvForceToKeepAsString:!0,minWidth:55,width:100,headerKey:"DURATION",filterable:!0,filter:{collection:e,model:l.h.multipleSelect,searchTerms:[1,33,44,50,66],filterOptions:{maxHeight:250,width:175}}},{id:"complete",name:"% Complete",field:"percentComplete",minWidth:70,type:l.f.number,sortable:!0,width:100,formatter:l.i.percentCompleteBar,filterable:!0,filter:{model:l.h.slider,operator:">"}},{id:"start",name:"Start",field:"start",headerKey:"START",formatter:l.i.dateIso,sortable:!0,minWidth:75,exportWithFormatter:!0,width:100,type:l.f.date,filterable:!0,filter:{model:l.h.compoundDate}},{id:"completed",field:"completed",headerKey:"COMPLETED",minWidth:85,maxWidth:85,formatter:l.i.checkmark,width:100,type:l.f.boolean,sortable:!0,filterable:!0,filter:{collection:[{value:"",label:""},{value:!0,label:"True"},{value:!1,label:"False"}],model:l.h.singleSelect,filterOptions:{autoDropWidth:!0}}}],this.gridOptions={autoResize:{containerId:"demo-container",sidePadding:15},enableCheckboxSelector:!0,enableFiltering:!0,enableTranslate:!0,i18n:this.translate},t&&(this.gridOptions.presets=t),this.getData()},t.prototype.getData=function(){this.dataset=[];for(var t=0;t<500;t++){var e=Math.round(100*Math.random()),i=N(2e3,2025),n=N(10,25),r=N(1,12),a=r<10?"0"+r:r,o=N(10,28),l=N(0,100),s=N(10,23),d=N(10,59);this.dataset[t]={id:t,title:"Task "+t,etc:"Something hidden "+t,description:t%5?"desc "+t:null,duration:e,percentComplete:l,percentCompleteNumber:l,start:new Date(i,r,o),usDateShort:r+"/"+o+"/"+n,utcDate:i+"-"+a+"-"+o+"T"+s+":"+d+":"+d+"Z",completed:t%3==0}}},t.prototype.gridStateChanged=function(t){console.log("Client sample, Grid State changed:: ",t),localStorage.gridState=JSON.stringify(t.gridState)},t.prototype.saveCurrentGridState=function(t){var e=this.angularGrid.gridStateService.getCurrentGridState();console.log("Client sample, last Grid State:: ",e),localStorage.gridState=JSON.stringify(e)},t.prototype.switchLanguage=function(){this.selectedLanguage="en"===this.selectedLanguage?"fr":"en",this.translate.use(this.selectedLanguage)},t.prototype.useDefaultPresets=function(){return{columns:[{columnId:"description",width:170},{columnId:"title",width:55},{columnId:"duration"},{columnId:"complete"},{columnId:"start"},{columnId:"usDateShort"},{columnId:"utcDate"}],filters:[{columnId:"duration",searchTerms:[2,22,44]},{columnId:"usDateShort",operator:"<",searchTerms:["4/20/25"]}],sorters:[{columnId:"duration",direction:"DESC"},{columnId:"complete",direction:"ASC"}]}},t=a.c([Object(n.n)({template:i("ABze")}),a.f("design:paramtypes",[d.c])],t)}(),z=function(){function t(){this.title="Angular-Slickgrid - Demo Site",this.subTitle="This site is to demo multiple usage of Angular-Slickgrid, choose an example from left side menu"}return t=a.c([Object(n.n)({template:i("4JaT")})],t)}(),_=function(){function t(t,e){this._class=t,this.http=e,this._clientLogLevel=B.INFO,this._serverLogLevel=B.OFF,this._isIE=!0,this.options={level:this._clientLogLevel,serverLogLevel:this._serverLogLevel,serverLoggingUrl:"/remotelog.do"},this._isIE=!(-1===navigator.userAgent.indexOf("MSIE")&&!navigator.userAgent.match(/Trident\//)&&!navigator.userAgent.match(/Edge\//))}return t.prototype.trace=function(t){for(var e=[],i=1;i<arguments.length;i++)e[i-1]=arguments[i];this._log(B.TRACE,!0,t,e)},t.prototype.debug=function(t){for(var e=[],i=1;i<arguments.length;i++)e[i-1]=arguments[i];this._log(B.DEBUG,!0,t,e)},t.prototype.info=function(t){for(var e=[],i=1;i<arguments.length;i++)e[i-1]=arguments[i];this._log(B.INFO,!0,t,e)},t.prototype.log=function(t){for(var e=[],i=1;i<arguments.length;i++)e[i-1]=arguments[i];this._log(B.LOG,!0,t,e)},t.prototype.warn=function(t){for(var e=[],i=1;i<arguments.length;i++)e[i-1]=arguments[i];this._log(B.WARN,!0,t,e)},t.prototype.error=function(t){for(var e=[],i=1;i<arguments.length;i++)e[i-1]=arguments[i];this._log(B.ERROR,!0,t,e)},t.prototype._timestamp=function(){return(new Date).toISOString()},t.prototype._logOnServer=function(t,e,i){var n=this;if(this.options.serverLoggingUrl&&!(t<this._serverLogLevel)){var r=(new p.c).set("Content-Type","application/json");this.http.post(this.options.serverLoggingUrl,{level:U[t],message:e,additional:i,timestamp:this._timestamp()},{headers:r}).subscribe(function(t){return null},function(t){return n._log(B.ERROR,!1,"FAILED TO LOG ON SERVER")})}},t.prototype._logIE=function(t,e,i){switch(t){case B.WARN:console.warn.apply(console,[this._timestamp()+" ["+U[t]+"]  -"+this._class+"-",e].concat(i));break;case B.ERROR:console.error.apply(console,[this._timestamp()+" ["+U[t]+"]  -"+this._class+"-",e].concat(i));break;case B.INFO:console.info.apply(console,[this._timestamp()+" ["+U[t]+"]  -"+this._class+"-",e].concat(i));break;default:console.log.apply(console,[this._timestamp()+" ["+U[t]+"]  -"+this._class+"-",e].concat(i))}},t.prototype._log=function(t,e,i,n){if(void 0===n&&(n=[]),i&&(e&&this._logOnServer(t,i,n),!(t<this._clientLogLevel))){if("object"==typeof i)try{i=JSON.stringify(i,null,2)}catch(a){n=[i].concat(n),i="circular object in message. "}if(this._isIE)return this._logIE(t,i,n);var r=this._getColor(t);console.log.apply(console,["%c"+this._timestamp()+" ["+U[t]+"] - "+this._class+" -","color:"+r,i].concat(n))}},t.prototype._getColor=function(t){switch(t){case B.TRACE:return"blue";case B.DEBUG:return"teal";case B.INFO:case B.LOG:return"gray";case B.WARN:case B.ERROR:return"red";case B.OFF:default:return"black"}},t}();!function(t){t[t.TRACE=0]="TRACE",t[t.DEBUG=1]="DEBUG",t[t.INFO=2]="INFO",t[t.LOG=3]="LOG",t[t.WARN=4]="WARN",t[t.ERROR=5]="ERROR",t[t.OFF=6]="OFF"}(B||(B={}));var V,U=["TRACE","DEBUG","INFO","LOG","WARN","ERROR","OFF"],Q=function(){function t(t){this.httpClient=t,this.logger=null,this.pageCount=1,this.pageNumber=1,this.totalItems=0,this.processing=!1,this.realPagination=!0,this.logger=new _("grid-pagination",t),this.logger.info("method [constructor] - START/END")}return Object.defineProperty(t.prototype,"gridPaginationOptions",{get:function(){return this._gridPaginationOptions},set:function(t){this._gridPaginationOptions=t,this.commonGrid=this.gridPaginationOptions.backendServiceApi.service},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){this.logger.info("init: ")},t.prototype.changeToFirstPage=function(t){this.logger.info("method [changeToFirstPage] - START/END"),this.pageNumber=1,this.onPageChanged(t,this.pageNumber)},t.prototype.changeToLastPage=function(t){this.logger.info("method [changeToLastPage] - START/END"),this.pageNumber=this.pageCount,this.onPageChanged(t,this.pageNumber)},t.prototype.changeToNextPage=function(t){this.logger.info("method [changeToNextPage] - START/END"),this.pageNumber<this.pageCount&&(this.pageNumber++,this.onPageChanged(t,this.pageNumber))},t.prototype.changeToPreviousPage=function(t){this.logger.info("method [changeToNextPage] - START/END"),this.pageNumber>1&&(this.pageNumber--,this.onPageChanged(t,this.pageNumber))},t.prototype.changeToCurrentPage=function(t){this.logger.info("method [changeToCurrentPage] - START/END"),this.pageNumber=t.currentTarget.value,this.pageNumber<1?this.pageNumber=1:this.pageNumber>this.pageCount&&(this.pageNumber=this.pageCount),this.onPageChanged(t,this.pageNumber)},t.prototype.onPageChanged=function(t,e){this.logger.info("method [onPageChanged] - START/END",this.commonGrid),this.commonGrid.processOnPaginationChanged(t,{newPage:e,pageSize:-1})},a.c([Object(n.D)("pageCount"),a.f("design:type",Object)],t.prototype,"pageCount",void 0),a.c([Object(n.D)("pageNumber"),a.f("design:type",Object)],t.prototype,"pageNumber",void 0),a.c([Object(n.D)(),a.f("design:type",Object),a.f("design:paramtypes",[Object])],t.prototype,"gridPaginationOptions",null),t=a.c([Object(n.n)({selector:"swt-common-grid-pagination",template:'\n    <div class="slick-pagination">\n    <div class="slick-pagination-nav">\n        <nav aria-label="Page navigation">\n            <ul class="pagination">\n                <li class="page-item" [ngClass]="pageNumber === 1 ? \'disabled\' : \'\'">\n                    <a class="page-link icon-seek-first fa fa-angle-double-left"\n                    aria-label="First" (click)="changeToFirstPage($event)"> </a>\n                </li>\n                <li class="page-item" [ngClass]="pageNumber === 1 ? \'disabled\' : \'\'">\n                    <a class="page-link icon-seek-prev fa fa-angle-left"\n                    aria-label="Previous" (click)="changeToPreviousPage($event)"> </a>\n                </li>\n            </ul>\n        </nav>\n\n        <div class="slick-page-number">\n            <span [translate]="\'PAGE\'"></span>\n            <input type="text" value="{{pageNumber}}" size="1"  (change)="changeToCurrentPage($event)">\n            <span [translate]="\'OF\'"></span><span> {{pageCount}}</span>\n        </div>\n\n        <nav aria-label="Page navigation">\n            <ul class="pagination">\n                <li class="page-item"\n                    [ngClass]="pageNumber === pageCount ? \'disabled\' : \'\'"><a\n                    class="page-link icon-seek-next text-center fa fa-lg fa-angle-right"\n                    aria-label="Next" (click)="changeToNextPage($event)"> </a></li>\n                <li class="page-item"\n                    [ngClass]="pageNumber === pageCount ? \'disabled\' : \'\'"><a\n                    class="page-link icon-seek-end fa fa-lg fa-angle-double-right"\n                    aria-label="Last" (click)="changeToLastPage($event)"> </a></li>\n            </ul>\n        </nav>\n        <nav>\n            <ul class="pagination">\n                <li class="">\n                    <span [hidden]="!processing" class="page-spin">\n                        <i class="fa fa-refresh fa-spin fa-lg fa-fw"></i>\n                    </span>\n                </li>\n            </ul>\n        </nav>\n    </div>\n</div>\n  ',styles:[".page-spin {\n              border: none;\n              height: 32px;\n              background-color: transparent;\n              cursor: default;\n              animation: fa-spin 1.2s infinite linear !important;\n            }\n            .page-spin:hover {\n                background-color: transparent;\n            }\n  "]}),a.f("design:paramtypes",[p.a])],t)}(),Y=function(){function t(t,e,i,r){this.httpClient=t,this.translate=e,this.el=i,this.renderer=r,this.logger=null,this.defaultPageSize=20,this.gridHeight=100,this.gridWidth=600,this.columnDefinitions=[],this.isAutoEdit=!1,this.isMultiSelect=!0,this.onFilterChanged_=new n.v,this.onPaginationChanged_=new n.v,this.onSortChanged_=new n.v,this.sortedGridColumn="",this.currentPage=1,this.filteredGridColumns="",this._onRowDoubleClick=new Function,this._onRowClick=new Function,this.gridOptions={asyncEditorLoading:!1,autoEdit:this.isAutoEdit,autoResize:{containerId:"common-grid-container",sidePadding:15},enableColumnPicker:!0,enableCellNavigation:!0,enableRowSelection:!0,enableCheckboxSelector:!1,enableFiltering:!0,rowHeight:23,forceFitColumns:!0,enableAutoTooltip:!0,enableGridMenu:!0,enablePagination:!1},this._paginationComponent={processing:!1,realPagination:!1},this.logger=new _("grid",t),this.logger.info("method [constructor] - START/END")}return Object.defineProperty(t.prototype,"paginationComponent",{get:function(){return this._paginationComponent},set:function(t){this.logger.info("method [pagination] - START, assigned datagrid pagination object: ",t.realPagination),t.realPagination&&(this._paginationComponent=t,this.gridOptions.backendServiceApi={service:this,preProcess:function(){},process:function(t){return null},postProcess:function(t){}},this._paginationComponent.gridPaginationOptions=this.gridOptions,this.angularSlickGrid.createBackendApiInternalPostProcessCallback(this.gridOptions)),this.logger.info("method [pagination] - START")},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){this.logger.info("method [ngOnInit] - START/END")},t.prototype.ngAfterViewInit=function(){this.logger.info("method [ngAfterViewInit] - START/END")},t.prototype.CustomGrid=function(t){this.logger.info("method [CustomGrid] - START"),this.id="grid"+Math.floor(Math.random()*Math.floor(100)),this.metaData=t;var e=[];if(this.metaData.columns.column){this.columnData=this.metaData.columns.column;for(var i=0;i<this.columnData.length;i++){var n=l.f.string,r={id:this.columnData[i].dataelement,name:this.columnData[i].heading,field:this.columnData[i].dataelement,sortable:this.columnData[i].sort,filterable:this.columnData[i].filterable,type:n,editor:null,formatter:null,filter:null,outputType:null,params:null,width:this.columnData[i].width};this.columnDefinitions.push(r),e[r.id]=""}this.gridObj.setColumns(this.columnDefinitions),this.angularSlickGrid.showPagination=!1}this.dataset=e,this.logger.info("method [CustomGrid] - END, this.columnDefinitions=",this.columnDefinitions)},t.prototype.CommonGrid=function(t,e,i,n,r,a,o,l,s,d){void 0===o&&(o=!0),void 0===l&&(l=null),void 0===s&&(s=!1),void 0===d&&(d=!1)},Object.defineProperty(t.prototype,"gridData",{get:function(){return this.dataset},set:function(t){this.logger.info("method [gridData] - START");for(var e=[],i=0;t.row&&i<t.row.length;i++){var n=t.row[i],r={id:i},a=void 0,o=[];for(a in n)n.hasOwnProperty(a)&&(o[a]=n[a].content);e[i]=Object.assign(o,r)}this.dataset=e,this.paginationComponent.processing=!1,this.logger.info("method [gridData] - END, all data size="+(t&&t.hasOwnProperty("size")?t.size:0))},enumerable:!0,configurable:!0}),t.prototype.gridReady=function(t){this.logger.info("method [gridReady] - START"),this.gridObj=t,this.logger.info("method [gridReady] - END")},t.prototype.dataviewReady=function(t){this.logger.info("method [dataviewReady] - START/END",t),this.dataviewObj=t},t.prototype.buildQuery=function(){return"buildQuery..."},t.prototype.init=function(t,e){this.options=t,this.pagination=e},t.prototype.resetPaginationOptions=function(){},t.prototype.updateOptions=function(t){this.options=a.a({},this.options,t)},t.prototype.processOnFilterChanged=function(t,e){var i=this;this.logger.info("method [onFilterChanged] - START",e),this.filteredGridColumns="";var n=0;return"keyup"!==t.type&&"keydown"!==t.type||(n=750,clearTimeout(V)),V=setTimeout(function(){i.filteredGridColumns="";for(var t=0;t<i.columnDefinitions.length;t++)e.columnFilters.hasOwnProperty(i.columnDefinitions[t].field)?i.filteredGridColumns+=e.columnFilters[i.columnDefinitions[t].field].searchTerms[0]+"|":i.filteredGridColumns+="All|";i.paginationComponent.pageNumber=1,i.currentPage=1,i.onFilterChanged_.emit(e),i.logger.info("method [onFilterChanged] - onFilterChanged_.emit(args) performed, filteredGridColumns="+i.filteredGridColumns)},n),this.logger.info("method [onFilterChanged] - END"),null},t.prototype.processOnPaginationChanged=function(t,e){return this.logger.info("method [onPaginationChanged] - START"),this.currentPage=e.newPage,this.onPaginationChanged_.emit(e),this.logger.info("method [onPaginationChanged] - END, currentPage="+this.currentPage),"onPaginationChanged"},t.prototype.processOnSortChanged=function(t,e){this.logger.info("method [onSortChanged] - START"),this.sortedGridColumn="";for(var i="|"+e.sortCols[0].sortAsc+"|",n=0;n<this.columnDefinitions.length;n++)this.columnDefinitions[n].field===e.sortCols[0].sortCol.field&&(this.sortedGridColumn=""+n+i);return this.onSortChanged_.emit(e),this.logger.info("method [onSortChanged] - END, sortedGridColumn="+this.sortedGridColumn),"onSortChanged"},t.prototype.getFilteredGridColumns=function(){return this.filteredGridColumns},t.prototype.getSortedGridColumn=function(){return this.sortedGridColumn},Object.defineProperty(t.prototype,"selectedRow",{get:function(){return this._selectedRow},set:function(t){this._selectedRow=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"onRowDoubleClick",{get:function(){return this._onRowDoubleClick},set:function(t){this._onRowDoubleClick=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"onRowClick",{get:function(){return this._onRowClick},set:function(t){this._onRowClick=t},enumerable:!0,configurable:!0}),a.c([Object(n.D)(),a.f("design:type",Object)],t.prototype,"gridHeight",void 0),a.c([Object(n.D)(),a.f("design:type",Object)],t.prototype,"gridWidth",void 0),a.c([Object(n.kb)("angularSlickGrid"),a.f("design:type",l.b)],t.prototype,"angularSlickGrid",void 0),a.c([Object(n.P)("onFilterChanged"),a.f("design:type",n.v)],t.prototype,"onFilterChanged_",void 0),a.c([Object(n.P)("onPaginationChanged"),a.f("design:type",n.v)],t.prototype,"onPaginationChanged_",void 0),a.c([Object(n.P)("onSortChanged"),a.f("design:type",n.v)],t.prototype,"onSortChanged_",void 0),a.c([Object(n.D)("pagination"),a.f("design:type",Q),a.f("design:paramtypes",[Q])],t.prototype,"paginationComponent",null),t=a.c([Object(n.n)({selector:"swt-common-grid",template:'<angular-slickgrid gridId=\'common-grid\'\n                      #angularSlickGrid\n                      (onDataviewCreated)="dataviewReady($event)"\n                      (onGridCreated)="gridReady($event)"\n                      [columnDefinitions]="columnDefinitions"\n                      [gridOptions]="gridOptions"\n                      [dataset]="dataset"\n                      >\n                      </angular-slickgrid>',styles:["\n       :host ::ng-deep .gridPane{\n            width: 100%!important;\n        }\n        :host ::ng-deep .slickgrid-container{\n            width: 100%!important;\n         }\n    "]}),Object(n.A)(),a.f("design:paramtypes",[p.a,d.c,n.t,n.V])],t)}(),Z=function(){function t(t,e,i){this.httpClient=t,this.viewContainerRef=e,this.componentFactoryResolver=i,this.testurl="http://127.0.0.1:8080/grid!display.do?",this.currentUrl=this.testurl,this.logger=null,this.logger=new _("test",null)}return t.prototype.ngOnInit=function(){this.commonGridPag&&(this.commonGrid.paginationComponent=this.commonGridPag)},t.prototype.ngAfterViewInit=function(){var t=this;this.logger.info("method [ngAfterViewInit] - START"),setTimeout(function(){t.commonGridPag.processing=!0,t.currentUrl=t.testurl+"&currentPage=1",t.commonGrid.CustomGrid(X.pagination_samples.grid.metadata),t.commonGrid.gridData=X.pagination_samples.grid.rows,t.commonGridPag.pageCount=X.pagination_samples.grid.rows.maxpage,t.commonGridPag.processing=!1},0),this.logger.info("method [ngAfterViewInit] - END")},t.prototype.filterChanged=function(t){this.commonGridPag.processing=!0,this.updateGridData()},t.prototype.paginationChanged=function(t){this.commonGridPag.processing=!0,this.updateGridData()},t.prototype.sortChanged=function(t){this.commonGridPag.processing=!0,this.updateGridData()},t.prototype.updateGridData=function(){var t=this;this.currentUrl=this.testurl+"&currentPage="+this.commonGrid.currentPage+"&selectedSort="+this.commonGrid.sortedGridColumn+"&selectedFilter="+this.commonGrid.filteredGridColumns,setTimeout(function(){t.commonGrid.gridData=X.pagination_samples.grid.rows,t.commonGridPag.pageCount=X.pagination_samples.grid.rows.maxpage},750)},a.c([Object(n.kb)("commonGrid1"),a.f("design:type",Y)],t.prototype,"commonGrid",void 0),a.c([Object(n.kb)("commonGridPag1"),a.f("design:type",Q)],t.prototype,"commonGridPag",void 0),t=a.c([Object(n.n)({selector:"swt-common-grid-test",template:i("CZsa")}),Object(n.A)(),a.f("design:paramtypes",[p.a,n.lb,n.p])],t)}(),X={pagination_samples:{grid:{metadata:{columns:{column:[{sort:!0,filterable:!1,width:60,dataelement:"hasNote",heading:"Note"},{sort:!0,filterable:!0,width:125,dataelement:"status",heading:"Status"},{sort:!0,visible:!0,filterable:!0,width:125,dataelement:"currency",heading:"Currency"},{sort:!0,visible:!0,filterable:!0,width:125,dataelement:"amount",heading:"Amount"},{sort:!0,visible:!0,filterable:!0,width:125,dataelement:"inputDate",heading:"Input Date"},{sort:!0,visible:!0,filterable:!0,width:125,dataelement:"inputTime",heading:"Input Time"}]}},rows:{row:[{currency:{content:"EUR"},amount:{content:"2 203 677,000"},startTime:{content:"06/19/2017 11:52:51"},inputDate:{content:"06/19/2017"},status:{content:"New"},inputTime:{content:"11:52:51"},hasNote:{content:"False"}},{currency:{content:"USD"},amount:{content:"6 203 677,000"},startTime:{content:"06/28/2017 10:42:00"},inputDate:{content:"06/28/2017"},status:{content:"New"},inputTime:{content:"10:40:12"},hasNote:{content:"True"}}],maxpage:5}}}},J=[{path:"home",component:z},{path:"additem",component:s},{path:"basic",component:u},{path:"colspan",component:f},{path:"editor",component:D},{path:"formatter",component:S},{path:"frozen",component:O},{path:"headerbutton",component:A},{path:"headermenu",component:F},{path:"gridgraphql",component:M},{path:"gridmenu",component:c},{path:"gridstate",component:H},{path:"draggrouping",component:b},{path:"grouping",component:G},{path:"localization",component:R},{path:"clientside",component:m},{path:"odata",component:I},{path:"remote",component:L},{path:"rowmove",component:P},{path:"selection",component:W},{path:"swt",component:Z},{path:"",redirectTo:"/basic",pathMatch:"full"},{path:"**",redirectTo:"/basic",pathMatch:"full"}],K=function(){function t(){}return t=a.c([Object(n.I)({imports:[o.a.forRoot(J,{useHash:!0})],exports:[o.a]})],t)}(),q=i("gIcY"),tt=i("ZYjt"),et=i("Ip0R"),it=i("0bV8"),nt=function(){function t(){this.title="Angular-Slickgrid"}return t=a.c([Object(n.n)({selector:"app-root",template:i("nH/3"),styles:[i("ynWL")]})],t)}();function rt(t){return new it.a(t,"./assets/i18n/",".json")}function at(t,e){return function(){return new Promise(function(i){e.get(et.e,Promise.resolve(null)).then(function(){t.setDefaultLang("en"),t.use("en").subscribe(function(){},function(t){console.error("Problem with 'en' language initialization.'")},function(){i(null)})})})}}var ot=function(){function t(){}return t=a.c([Object(n.I)({declarations:[nt,s,u,m,f,D,b,S,O,M,G,A,F,R,c,I,L,P,W,H,Z,Q,Y,z],imports:[K,tt.a,q.a,p.b,d.b.forRoot({loader:{provide:d.a,useFactory:rt,deps:[p.a]}}),l.c.forRoot({enableAutoResize:!0,autoResize:{containerId:"demo-container",sidePadding:15}})],providers:[{provide:n.d,useFactory:at,deps:[d.c,n.C],multi:!0}],bootstrap:[nt]})],t)}();Object(n.qb)(),Object(r.a)().bootstrapModule(ot,{preserveWhitespaces:!0}).catch(function(t){return console.log(t)})}},[[0,0,4]]]);
//# sourceMappingURL=main.ff641ceef2d0a093ac60.js.map